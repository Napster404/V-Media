{"version":3,"sources":["Components/Misc/axios.js","firebase.js","Components/API/createUser.js","Components/ReduxStore/appSlice.js","Components/Login/checkAuth.js","Components/Login/Login.js","Components/Navbar/Navbar.js","Components/Home/HomeLeftRow.js","Components/Home/HomeLeft.js","Components/API/uploadPost.js","Components/Feed/PostSender.js","Components/ReduxStore/postSlice.js","Components/API/removeComment.js","Components/Feed/Comments.js","Components/API/addComment.js","Components/Feed/CommentSender.js","Components/API/deletePost.js","Components/API/removeLike.js","Components/API/addLike.js","Components/API/fetchPostData.js","Components/Feed/Post.js","Components/Feed/Feed.js","Components/Misc/StyledDialog.js","Components/API/deleteEvent.js","Components/Home/ShowEvent.js","Components/Home/Event.js","Components/API/uploadEvent.js","Components/Home/CreateNewEvent.js","Components/Home/HomeRight.js","Components/Home/Home.js","Components/Messenger/Room.js","Components/ReduxStore/roomSlice.js","Components/API/addDirectRoom.js","Components/API/addGroupRoom.js","Components/Messenger/MessengerLeft.js","Components/API/removeMessage.js","Components/Messenger/Chat/Chat.js","Components/API/addMember.js","Components/Messenger/RoomSettings/AddMember.js","Components/Messenger/RoomSettings/GroupMember.js","Components/Misc/OutsideAlerter.js","Components/API/removeMember.js","Components/API/removeDirectRoom.js","Components/Messenger/RoomSettings/RoomSettings.js","Components/Messenger/Chat/ChatReply.js","Components/API/addMessage.js","Components/Messenger/Inbox.js","Components/Messenger/Messenger.js","Components/Profile/PostMiddleware.js","Components/Profile/Profile.js","Components/API/fetchEvents.js","Components/API/fetchUserPosts.js","Components/API/fetchPosts.js","Components/API/fetchUserRooms.js","Components/API/fetchAllData.js","Components/API/fetchRoomsData.js","Components/AboutUs/AboutUs.js","Components/API/fetchRoomData.js","Main.js","App.js","reportWebVitals.js","Components/ReduxStore/store.js","index.js"],"names":["instance","axios","create","baseURL","auth","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","firestore","storage","provider","GoogleAuthProvider","createUser","a","signInWithPopup","then","result","userData","userId","user","uid","name","displayName","avatar","photoURL","email","saveData","catch","err","console","log","message","post","appSlice","createSlice","initialState","events","userPosts","rooms","reducers","login","state","action","payload","logout","setEvents","sort","b","timestamp","setUserPosts","setRooms","_id","length","every","v","i","actions","selectUser","app","selectEvents","selectRooms","checkAuth","dispatch","history","onAuthStateChanged","authUser","username","avatarSrc","replace","Login","useHistory","useDispatch","useEffect","signInHandler","className","src","alt","Button","variant","onClick","Navbar","useSelector","location","useLocation","id","pathname","split","document","getElementById","classList","add","remove","Avatar","Search","placeholder","Tooltip","title","enterDelay","push","Telegram","style","height","width","InfoOutlined","signOut","ExitToAppRounded","HomeLeftRow","Icon","path","HomeLeft","uploadPost","postData","res","data","postsArray","PostSender","useState","postInput","setPostInput","postImage","setPostImage","handleSubmit","e","preventDefault","imageName","Date","now","ref","put","on","snapShot","child","getDownloadURL","fireBaseUrl","text","imgName","value","onChange","target","type","PhotoLibrary","color","file","files","size","alert","IconButton","Close","postSlice","posts","setPosts","appendPosts","updatePost","ind","findIndex","obj","getPosts","removeComment","postId","commentId","get","params","Comments","comment","handleDelete","parseInt","toLocaleString","content","Delete","addComment","requestData","CommentSender","commentInput","setCommentInput","commentData","Send","deletePost","removeLike","addLike","fetchPosts","Post","showComments","setShowComments","refFromURL","delete","handleRefresh","fetchPostData","handleLike","likesArray","includes","Sync","ThumbUp","ChatBubbleOutline","commentsArray","map","Feed","useStyles","makeStyles","paper","borderRadius","StyledDialog","open","onClose","component","classes","StylesProvider","injectFirst","Dialog","deleteEvent","eventId","eventsArray","ShowEvent","heading","description","Event","showEvent","setShowEvent","uploadEvent","CreateNewEvent","setHeading","setDescription","dateTime","setDateTime","errorHeading","setErrorHeading","errorDescription","setErrorDescription","validateHeading","validateDescription","uploadData","parse","TextField","label","multiline","rowsMax","HomeRight","eventData","newEvent","setNewEvent","Add","event","Home","isAdmin","Room","roomId","usersArray","setRoomInfo","recentMessageUser","recentMessageContent","newUser","setNewUser","fetchId","handleSelect","isGroup","slice","roomSlice","roomsData","setRoomsData","appendRoomsData","updateRoomData","selectRoomsData","setMessagesData","setCurrentRoom","room","addDirectRoom","queryData","addGroupRoom","MessengerLeft","sortedRooms","setSortedRooms","userInput","setUserInput","option","setOption","userEmail","selectOption","toggle","messagesArray","autoComplete","removeMessage","messageId","Chat","setMessageReply","messageReplied","setMessageReplied","replyId","messageReply","Reply","addMember","AddMember","newMember","setNewMember","AddRounded","GroupMember","setUser","placement","OutsideAlerter","outsideHandler","wrapperRef","useRef","handleClickOutside","current","contains","addEventListener","removeEventListener","ClickHandler","removeMember","removeDirectRoom","RoomSettings","addMemberDialog","setAddMemberDialog","viewMembersDialog","setViewMembersDialog","exitFromGroup","deleteRoom","PermIdentityRounded","ChatReply","addMessage","Inbox","roomInfo","messages","setMessages","newMessage","setNewMessage","EmojiEmotions","Messenger","roomPath","setRoomPath","PostMiddleware","setPost","Profile","fetchEvents","fetchUserPosts","fetchUserRooms","roomsArray","fetchAllData","fetchRoomData","fetchRoomsData","forEach","AboutUs","LinkedIn","GitHub","Mail","Main","userRooms","socket","socketIOClient","disconnect","channel","Pusher","cluster","subscribe","bind","unbind_all","unsubscribe","exact","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","configureStore","reducer","appReducer","roomReducer","postReducer","ReactDOM","render","store"],"mappings":"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","file":"static/js/main.c15f1d84.chunk.js","sourcesContent":["import axios from 'axios'\r\n\r\nconst instance = axios.create({\r\n    // baseURL: 'http://localhost:8000'\r\n    baseURL: 'https://network-backend-server.herokuapp.com/'\r\n})\r\n\r\nexport default instance","import firebase from 'firebase'\r\n\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyDvIX7cr-dC5lgviOMVErmMIm6pEBVVk2g\",\r\n    authDomain: \"v-work9.firebaseapp.com\",\r\n    projectId: \"v-work9\",\r\n    storageBucket: \"v-work9.appspot.com\",\r\n    messagingSenderId: \"670208798379\",\r\n    appId: \"1:670208798379:web:db0737857fdaf9f59551ee\",\r\n    measurementId: \"G-QD9M7GQG9F\"\r\n};\r\n\r\nconst firebaseApp = firebase.initializeApp(firebaseConfig)\r\nconst db = firebaseApp.firestore()\r\nexport const auth = firebase.auth()\r\nexport const storage = firebase.storage()\r\nexport const provider = new firebase.auth.GoogleAuthProvider();","import axios from \"../Misc/axios\"\r\nimport { auth, provider } from \"../../firebase\"\r\n\r\n\r\nconst createUser = async () => {\r\n\r\n    // Do Authentication using Firebase\r\n    await auth.signInWithPopup(provider)\r\n        .then(result => {\r\n\r\n            const userData = {\r\n                userId: result.user.uid,\r\n                name: result.user.displayName,\r\n                avatar: result.user.photoURL,\r\n                email: result.user.email\r\n            }\r\n\r\n            // Send Data to Database\r\n            saveData(userData)\r\n        })\r\n        .catch(err => console.log(err.message))\r\n}\r\n\r\nconst saveData = async (userData) => {\r\n    await axios.post('/upload/user', userData)\r\n}\r\n\r\nexport default createUser","import { createSlice } from '@reduxjs/toolkit'\r\n\r\nexport const appSlice = createSlice({\r\n    name: 'app',\r\n\r\n    initialState: {\r\n        user: null,\r\n        events: [],\r\n        userPosts: [],\r\n        rooms: []\r\n    },\r\n\r\n    reducers: {\r\n        login: (state, action) => {\r\n            state.user = action.payload\r\n        },\r\n\r\n        logout: (state) => {\r\n            state.user = null\r\n            state.events = []\r\n            state.rooms = []\r\n            state.userPosts = []\r\n        },\r\n\r\n        setEvents: (state, action) => {\r\n            action.payload.sort((a, b) => a.timestamp - b.timestamp)\r\n            state.events = action.payload;\r\n        },\r\n\r\n        setUserPosts: (state, action) => {\r\n            state.userPosts = action.payload\r\n        },\r\n\r\n        setRooms: (state, action) => {\r\n            action.payload.sort((a, b) => a._id - b._id)\r\n            if (!(state.rooms.length === action.payload.length &&\r\n                state.rooms.every((v, i) => v === action.payload[i]))) {\r\n                state.rooms = action.payload\r\n            }\r\n        }\r\n    },\r\n});\r\n\r\nexport const { login, logout, setEvents, setUserPosts, setRooms } = appSlice.actions;\r\n\r\nexport const selectUser = state => state.app.user;\r\nexport const selectEvents = state => state.app.events;\r\nexport const selectPosts = state => state.app.userPosts;\r\nexport const selectRooms = state => state.app.rooms;\r\n\r\nexport default appSlice.reducer;","import { auth } from \"../../firebase\";\r\nimport { login, logout } from \"../ReduxStore/appSlice\";\r\n\r\nconst checkAuth = (dispatch, history) => {\r\n\tauth.onAuthStateChanged((authUser) => {\r\n\t\tif (authUser) {\r\n\t\t\t// Insert User Details into Redux Store\r\n\t\t\tdispatch(\r\n\t\t\t\tlogin({\r\n\t\t\t\t\tuserId: authUser.uid,\r\n\t\t\t\t\tusername: authUser.displayName,\r\n\t\t\t\t\tavatarSrc: authUser.photoURL,\r\n\t\t\t\t})\r\n\t\t\t);\r\n\r\n\t\t\t// Redirect to Home\r\n\t\t\thistory.replace(\"/home\");\r\n\t\t} else {\r\n\t\t\tdispatch(logout());\r\n\t\t\thistory.replace(\"/login\");\r\n\t\t}\r\n\t});\r\n};\r\n\r\nexport default checkAuth;\r\n","import React, { useEffect } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport \"./Login.css\";\r\n\r\nimport { Button } from \"@material-ui/core\";\r\nimport createUser from \"../API/createUser\";\r\nimport checkAuth from \"./checkAuth\";\r\n\r\nconst Login = () => {\r\n\tconst history = useHistory();\r\n\tconst dispatch = useDispatch();\r\n\r\n\tuseEffect(() => {\r\n\t\tcheckAuth(dispatch, history);\r\n\t}, [])\r\n\r\n\tconst signInHandler = async () => {\r\n\t\tawait createUser();\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div className=\"login\">\r\n\t\t\t<div className=\"login__container\">\r\n\t\t\t\t<img\r\n\t\t\t\t\tsrc=\"https://upload.wikimedia.org/wikipedia/commons/a/aa/V-logo.svg\"\r\n\t\t\t\t\talt=\"LogoImage\"\r\n\t\t\t\t/>\r\n\t\t\t\t<Button variant=\"outlined\" onClick={signInHandler}>\r\n\t\t\t\t\tSign In\r\n\t\t\t\t</Button>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Login;\r\n","import React, { useEffect } from \"react\"\r\nimport { useSelector } from 'react-redux'\r\nimport { useHistory, useLocation } from 'react-router-dom'\r\nimport \"./Navbar.css\";\r\n\r\nimport { auth } from \"../../firebase\";\r\nimport { selectUser } from '../ReduxStore/appSlice'\r\nimport { Avatar, Tooltip } from \"@material-ui/core\";\r\nimport {\r\n\tSearch,\r\n\tHome,\r\n\tTelegram,\r\n\tExitToAppRounded,\r\n\tInfoOutlined,\r\n} from \"@material-ui/icons\";\r\n\r\nconst Navbar = () => {\r\n\r\n\tconst user = useSelector(selectUser)\r\n\tlet history = useHistory();\r\n\tlet location = useLocation();\r\n\r\n\tuseEffect(() => {\r\n\t\tconst id = (location.pathname).split('/')[1]\r\n\t\tif (id === 'home' || id === 'messenger') {\r\n\t\t\tdocument.getElementById(id).classList.add(\"navbar__option--active\");\r\n\t\t\treturn () => {\r\n\t\t\t\tif (document.getElementById(id)) {\r\n\t\t\t\t\tdocument.getElementById(id).classList.remove(\"navbar__option--active\");\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}, [location])\r\n\r\n\treturn (\r\n\t\t<div className=\"navbar\">\r\n\r\n\t\t\t<div className=\"navbar__left\">\r\n\r\n\t\t\t\t<div\r\n\t\t\t\t\tclassName=\"navbar__logo\"\r\n\t\t\t\t\tonClick={() => history.replace('/home')}\r\n\t\t\t\t>\r\n\t\t\t\t\t<Avatar src=\"https://upload.wikimedia.org/wikipedia/commons/a/aa/V-logo.svg\" />\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<div className=\"navbar__input\">\r\n\t\t\t\t\t<Search />\r\n\t\t\t\t\t<input placeholder=\"Type here\" />\r\n\t\t\t\t</div>\r\n\r\n\t\t\t</div>\r\n\r\n\t\t\t<div className=\"navbar__center\">\r\n\r\n\t\t\t\t<Tooltip title=\"Home\" enterDelay={1000}>\r\n\t\t\t\t\t<div\r\n\t\t\t\t\t\tid=\"home\"\r\n\t\t\t\t\t\tclassName=\"navbar__option\"\r\n\t\t\t\t\t\tonClick={() => history.push(\"/home\")}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<Home />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</Tooltip>\r\n\r\n\t\t\t\t<Tooltip title=\"Messenger\" enterDelay={1000}>\r\n\t\t\t\t\t<div\r\n\t\t\t\t\t\tid=\"messenger\"\r\n\t\t\t\t\t\tclassName=\"navbar__option\"\r\n\t\t\t\t\t\tonClick={() => history.push(\"/messenger\")}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<Telegram />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</Tooltip>\r\n\r\n\t\t\t</div>\r\n\r\n\t\t\t<div className=\"navbar__right\">\r\n\r\n\t\t\t\t<div\r\n\t\t\t\t\tid='profile'\r\n\t\t\t\t\tclassName=\"navbar__info\"\r\n\t\t\t\t\tonClick={() => history.push(\"/user/\" + user.userId)}\r\n\t\t\t\t>\r\n\r\n\t\t\t\t\t<Avatar\r\n\t\t\t\t\t\tsrc={user.avatarSrc}\r\n\t\t\t\t\t\tstyle={{ height: \"25px\", width: \"25px\" }}\r\n\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t<p> {user.username} </p>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<div className=\"navbar__settings\">\r\n\r\n\t\t\t\t\t<div\r\n\t\t\t\t\t\tclassName=\"navbar__settingsOption\"\r\n\t\t\t\t\t\tonClick={() => history.replace('/about')}\r\n\t\t\t\t\t>\r\n\r\n\t\t\t\t\t\t<InfoOutlined style={{ height: \"25px\", width: \"25px\" }} />\r\n\t\t\t\t\t\t<p> About Us </p>\r\n\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t<div\r\n\t\t\t\t\t\tclassName=\"navbar__settingsOption\"\r\n\t\t\t\t\t\tonClick={() => auth.signOut()}\r\n\t\t\t\t\t>\r\n\r\n\t\t\t\t\t\t<ExitToAppRounded style={{ height: \"25px\", width: \"25px\" }} />\r\n\t\t\t\t\t\t<p> Logout </p>\r\n\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t</div>\r\n\r\n\t\t\t</div>\r\n\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Navbar;\r\n","import React from 'react'\r\nimport { useHistory } from 'react-router-dom'\r\nimport './HomeLeftRow.css'\r\n\r\nimport { Avatar } from '@material-ui/core'\r\n\r\nconst HomeLeftRow = ({ src, Icon, title, path }) => {\r\n\r\n    const history = useHistory()\r\n\r\n    return (\r\n        <div className='homeLeftRow' onClick={() => history.replace(path)}>\r\n\r\n            {src && <Avatar\r\n                style={{ \"height\": \"25px\", \"width\": \"25px\", 'margin': \"10px 10px\" }}\r\n                src={src}\r\n            />}\r\n\r\n            {Icon && <Icon />}\r\n            <p>{title}</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HomeLeftRow\r\n","import React from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport './HomeLeft.css'\r\n\r\nimport HomeLeftRow from './HomeLeftRow'\r\nimport { Telegram, InfoOutlined } from '@material-ui/icons'\r\nimport { selectUser } from '../ReduxStore/appSlice'\r\n\r\nconst HomeLeft = () => {\r\n\r\n    const user = useSelector(selectUser)\r\n\r\n    return (\r\n        <div className='homeLeft'>\r\n            <HomeLeftRow src={user.avatarSrc} title={user.username} path={'/user/' + user.userId} />\r\n            <HomeLeftRow Icon={Telegram} title='Messenger' path={'/messenger'} />\r\n            <HomeLeftRow Icon={InfoOutlined} title='About Us' path={'/about'} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HomeLeft\r\n","import axios from '../Misc/axios'\r\nimport { setUserPosts } from '../ReduxStore/appSlice';\r\n\r\nconst uploadPost = async (dispatch, postData) => {\r\n    await axios.post('/upload/post', postData)\r\n        .then(res => dispatch(setUserPosts(res.data.postsArray)))\r\n}\r\n\r\nexport default uploadPost\r\n","import React, { useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport './PostSender.css'\r\n\r\nimport { Avatar, Button, IconButton } from '@material-ui/core'\r\nimport { Close, PhotoLibrary } from '@material-ui/icons'\r\nimport { selectUser } from '../ReduxStore/appSlice'\r\nimport uploadPost from '../API/uploadPost'\r\nimport { storage } from '../../firebase'\r\n\r\nconst PostSender = () => {\r\n\r\n    const dispatch = useDispatch()\r\n    const user = useSelector(selectUser)\r\n    const [postInput, setPostInput] = useState('')\r\n    const [postImage, setPostImage] = useState(null)\r\n\r\n    const handleImageChange = (e) => {\r\n        const file = e.target.files[0]\r\n        if (file) {\r\n            if (file.size > 1048576) {\r\n                alert('File must be less than 1MB')\r\n            } else {\r\n                setPostImage(e.target.files[0])\r\n            }\r\n        }\r\n    }\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n\r\n        if (postImage && postInput.length > 0) {\r\n            const imageName = Date.now() + postImage.name;\r\n            const uploadTask = storage.ref(`/images/${imageName}`).put(postImage)\r\n            uploadTask.on('state_changed',\r\n                (snapShot) => {\r\n                    // console.log(snapShot)\r\n                }, (err) => {\r\n                    // console.log(err)\r\n                }, () => {\r\n                    storage.ref('images').child(imageName).getDownloadURL()\r\n                        .then(fireBaseUrl => {\r\n                            const postData = {\r\n                                userId: user.userId,\r\n                                username: user.username,\r\n                                text: postInput,\r\n                                avatar: user.avatarSrc,\r\n                                imgName: fireBaseUrl,\r\n                                timestamp: Date.now()\r\n                            }\r\n\r\n                            setPostInput('');\r\n                            setPostImage(null);\r\n                            uploadPost(dispatch, postData)\r\n                        })\r\n                })\r\n\r\n        } else if (postInput.length > 0) {\r\n            const postData = {\r\n                userId: user.userId,\r\n                username: user.username,\r\n                text: postInput,\r\n                avatar: user.avatarSrc,\r\n                timestamp: Date.now()\r\n            }\r\n\r\n            setPostInput('');\r\n            await uploadPost(dispatch, postData)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className='postSender'>\r\n            <div className='postSender__top'>\r\n                <Avatar src={user.avatarSrc} />\r\n\r\n                <form>\r\n\r\n                    <input\r\n                        value={postInput}\r\n                        onChange={(e) => setPostInput(e.target.value)}\r\n                        className='postSender__input'\r\n                        placeholder=\"What's on your mind?\"\r\n                    />\r\n\r\n                    <Button onClick={handleSubmit} type='submit'>\r\n                        Submit\r\n                    </Button>\r\n\r\n                </form>\r\n\r\n            </div>\r\n\r\n            <div className='postSender__bottom'>\r\n\r\n                <div className={`postSender__option ${postImage && 'postSender__option--disable'}`}>\r\n                    <PhotoLibrary style={{ color: \"green\" }} />\r\n                    <h3> Photos/Videos </h3>\r\n                    <input type='file' onChange={handleImageChange} />\r\n                </div>\r\n\r\n                {postImage &&\r\n                    <div className='postSender__optionClose'>\r\n                        <IconButton onClick={() => setPostImage(null)}>\r\n                            <Close />\r\n                        </IconButton>\r\n                    </div>\r\n                }\r\n\r\n            </div>\r\n        </div >\r\n    )\r\n}\r\n\r\nexport default PostSender\r\n","import { createSlice } from '@reduxjs/toolkit'\r\n\r\nexport const postSlice = createSlice({\r\n    name: 'post',\r\n\r\n    initialState: {\r\n        posts: []\r\n    },\r\n\r\n    reducers: {\r\n        setPosts: (state, action) => {\r\n            state.posts = action.payload\r\n        },\r\n\r\n        appendPosts: (state, action) => {\r\n            state.posts.push(action.payload)\r\n        },\r\n        \r\n        updatePost: (state, action) => {\r\n            const ind = state.posts.findIndex(obj => obj._id === action.payload._id)\r\n            state.posts[ind] = action.payload\r\n        }\r\n    },\r\n});\r\n\r\nexport const { setPosts, appendPosts, updatePost } = postSlice.actions;\r\n\r\nexport const getPosts = state => state.post.posts;\r\n\r\nexport default postSlice.reducer;","import axios from '../Misc/axios'\r\nimport { updatePost } from '../ReduxStore/postSlice';\r\n\r\nconst removeComment = async (dispatch, postId, commentId) => {\r\n    await axios.get('/update/post/removeComment', { params: { postId: postId, commentId: commentId } })\r\n        .then(res => dispatch(updatePost(res.data)))\r\n}\r\n\r\nexport default removeComment","import React from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport './Comments.css'\r\n\r\nimport { Avatar, IconButton, Tooltip } from '@material-ui/core'\r\nimport { Delete } from '@material-ui/icons'\r\nimport removeComment from '../API/removeComment'\r\nimport { selectUser } from '../ReduxStore/appSlice'\r\n\r\nconst Comments = ({ postId, comment }) => {\r\n\r\n    const dispatch = useDispatch()\r\n    const user = useSelector(selectUser)\r\n    const handleDelete = async () => {\r\n        await removeComment(dispatch, postId, comment._id)\r\n    }\r\n\r\n    return (\r\n        <div className='comment'>\r\n            <div className='comment__info'>\r\n                <Avatar\r\n                    style={{ width: '30px', height: '30px' }}\r\n                    src={comment.avatar}\r\n                />\r\n\r\n                <Tooltip title={new Date(parseInt(comment.timestamp)).toLocaleString()} enterDelay={1000} >\r\n\r\n                    <div className='comment__body'>\r\n                        <div className='comment__bodyUsername'>\r\n                            <p>{comment.username}</p>\r\n                        </div>\r\n                        <div className='comment__bodyContent'>\r\n                            <p>{comment.content}</p>\r\n                        </div>\r\n                    </div>\r\n\r\n                </Tooltip>\r\n            </div>\r\n\r\n            { (user.userId === comment.userId) &&\r\n                <IconButton style={{ width: 'fit-content', height: 'fit-content' }} onClick={handleDelete}>\r\n                    <Delete style={{ color: '#FF0000' }} />\r\n                </IconButton>\r\n            }\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Comments\r\n","import axios from '../Misc/axios'\r\nimport { updatePost } from '../ReduxStore/postSlice';\r\n\r\nconst addComment = async (dispatch, requestData) => {\r\n    await axios.post('/update/post/addComment', requestData)\r\n        .then(res => dispatch(updatePost(res.data)))\r\n}\r\n\r\nexport default addComment","import React, { useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport './CommentSender.css'\r\n\r\nimport { Avatar, IconButton } from \"@material-ui/core\";\r\nimport { Send } from '@material-ui/icons';\r\nimport { selectUser } from '../ReduxStore/appSlice'\r\nimport addComment from '../API/addComment'\r\n\r\nconst CommentSender = ({ postId }) => {\r\n\r\n    const dispatch = useDispatch()\r\n    const user = useSelector(selectUser)\r\n    const [commentInput, setCommentInput] = useState('')\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n\r\n        if (commentInput.length > 0) {\r\n            const requestData = {\r\n                commentData: {\r\n                    userId: user.userId,\r\n                    username: user.username,\r\n                    avatar: user.avatarSrc,\r\n                    content: commentInput,\r\n                    timestamp: Date.now()\r\n                },\r\n                postId: postId\r\n            }\r\n\r\n            setCommentInput('');\r\n            await addComment(dispatch, requestData)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className='commentSender'>\r\n            <Avatar\r\n                style={{ width: '30px', height: '30px' }}\r\n                src={user.avatarSrc}\r\n            />\r\n\r\n            <form>\r\n                <div className='commentSender__input'>\r\n                    <input\r\n                        placeholder='Enter Comment'\r\n                        value={commentInput}\r\n                        onChange={(e) => setCommentInput(e.target.value)}\r\n                    />\r\n                    <IconButton\r\n                        type='submit'\r\n                        onClick={handleSubmit}\r\n                    >\r\n                        <Send />\r\n                    </IconButton>\r\n                </div>\r\n            </form>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CommentSender\r\n","import axios from '../Misc/axios'\r\nimport { setUserPosts } from '../ReduxStore/appSlice';\r\n\r\nconst deletePost = async (dispatch, userId, postId) => {\r\n    await axios.get('/delete/post', { params: { userId: userId, postId: postId } })\r\n        .then(res => dispatch(setUserPosts(res.data.postsArray)))\r\n}\r\n\r\nexport default deletePost\r\n","import axios from '../Misc/axios'\r\nimport { updatePost } from '../ReduxStore/postSlice';\r\n\r\nconst removeLike = async (dispatch, userId, postId) => {\r\n    await axios.get('/update/post/removeLike', { params: { userId: userId, postId: postId } })\r\n        .then(res => dispatch(updatePost(res.data)))\r\n}\r\n\r\nexport default removeLike","import axios from '../Misc/axios'\r\nimport { updatePost } from '../ReduxStore/postSlice';\r\n\r\nconst addLike = async (dispatch, userId, postId) => {\r\n    await axios.get('/update/post/addLike', { params: { userId: userId, postId: postId } })\r\n        .then(res => dispatch(updatePost(res.data)))\r\n}\r\n\r\nexport default addLike","import axios from \"../Misc/axios\"\r\nimport { updatePost } from \"../ReduxStore/postSlice\";\r\n\r\nconst fetchPosts = async (dispatch, postId) => {\r\n    await axios.get('retrieve/postData', { params: { postId: postId } })\r\n        .then(res => dispatch(updatePost(res.data)))\r\n\r\n}\r\n\r\nexport default fetchPosts","import React, { useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { useHistory } from 'react-router-dom'\r\nimport './Post.css'\r\n\r\nimport Comment from './Comments'\r\nimport CommentSender from './CommentSender'\r\nimport { Avatar, IconButton } from '@material-ui/core'\r\nimport { ChatBubbleOutline, Delete, Sync, ThumbUp } from '@material-ui/icons'\r\nimport { selectUser } from '../ReduxStore/appSlice'\r\n\r\nimport deletePost from '../API/deletePost'\r\nimport removeLike from '../API/removeLike'\r\nimport addLike from '../API/addLike'\r\nimport fetchPostData from '../API/fetchPostData'\r\nimport { storage } from '../../firebase'\r\n\r\nconst Post = ({ post }) => {\r\n\r\n    const history = useHistory()\r\n    const dispatch = useDispatch()\r\n    const user = useSelector(selectUser)\r\n    const [showComments, setShowComments] = useState(false)\r\n\r\n    const handleDelete = async () => {\r\n        if (post.imgName) storage.refFromURL(post.imgName).delete();\r\n        await deletePost(dispatch, user.userId, post._id)\r\n    }\r\n\r\n    const handleRefresh = async () => {\r\n        await fetchPostData(dispatch, post._id)\r\n    }\r\n\r\n    const handleLike = async () => {\r\n        if (post.likesArray.includes(user.userId)) {\r\n            await removeLike(dispatch, user.userId, post._id)\r\n        } else {\r\n            await addLike(dispatch, user.userId, post._id)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className='post'>\r\n            <div className='post__top'>\r\n\r\n                <div className='post__topLeft'>\r\n                    <Avatar\r\n                        className='post__avatar'\r\n                        src={post.avatar}\r\n                        onClick={() => history.replace('/user/' + user.userId)}\r\n                    />\r\n\r\n                    <div className='post__topInfo'>\r\n                        <h3 onClick={() => history.replace('/user/' + user.userId)}>{post.username}</h3>\r\n                        <p> {new Date(parseInt(post.timestamp)).toLocaleString()} </p>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className='post__topIcons'>\r\n\r\n                    {post.userId === user.userId &&\r\n                        <IconButton\r\n                            className='post__topIconsDelete'\r\n                            onClick={handleDelete}\r\n                        >\r\n                            <Delete />\r\n                        </IconButton>\r\n                    }\r\n\r\n                    <IconButton\r\n                        className='post__topIconsRefresh'\r\n                        onClick={handleRefresh}\r\n                    >\r\n                        <Sync />\r\n                    </IconButton>\r\n\r\n                </div>\r\n\r\n            </div>\r\n\r\n            <div className='post__text'>\r\n                <p>{post.text}</p>\r\n            </div>\r\n\r\n            <div className='post__image'>\r\n                {post.imgName && <img\r\n                    src={post.imgName}\r\n                    alt=''\r\n                />}\r\n            </div>\r\n\r\n            <div className={`post__bottom ${showComments && 'post__bottom--active'}`}>\r\n\r\n                <div\r\n                    className={`post__option ${post.likesArray.includes(user.userId) && 'post__option--active'}`}\r\n                    onClick={handleLike}\r\n                >\r\n                    <ThumbUp />\r\n                    <p>Like</p>\r\n                    <p>{post.likesArray.length}</p>\r\n                </div>\r\n\r\n                <div\r\n                    className={`post__option ${showComments && 'post__option--active'}`}\r\n                    onClick={() => setShowComments(!showComments)}\r\n                >\r\n                    <ChatBubbleOutline />\r\n                    <p>Comment</p>\r\n                    <p>{post.commentsArray.length}</p>\r\n                </div>\r\n\r\n            </div>\r\n\r\n            {showComments &&\r\n                <div className='post__comments'>\r\n\r\n                    {\r\n                        post.commentsArray.map(comment => (\r\n                            <Comment\r\n                                key={comment._id}\r\n                                postId={post._id}\r\n                                comment={comment}\r\n                            />\r\n                        ))\r\n                    }\r\n\r\n                    <CommentSender\r\n                        postId={post._id}\r\n                    />\r\n\r\n                </div>\r\n            }\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Post\r\n","import React from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport './Feed.css'\r\n\r\nimport PostSender from './PostSender'\r\nimport Post from './Post'\r\nimport { getPosts } from '../ReduxStore/postSlice'\r\n\r\nconst Feed = () => {\r\n\r\n    const postData = useSelector(getPosts)\r\n\r\n    return (\r\n        <div className='feed'>\r\n            <PostSender />\r\n\r\n            {\r\n                postData.map(post => (\r\n                    <Post\r\n                        key={post._id}\r\n                        post={post}\r\n                    />\r\n                ))\r\n            }\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Feed\r\n","import React from 'react'\r\n\r\nimport { Dialog } from '@material-ui/core'\r\nimport { makeStyles, StylesProvider } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles({\r\n    paper: {\r\n        borderRadius: 30\r\n    }\r\n});\r\n\r\nconst StyledDialog = ({ open, onClose, component }) => {\r\n    const classes = useStyles();\r\n    return (\r\n        <StylesProvider injectFirst>\r\n            <Dialog\r\n            open={open}\r\n            onClose={onClose}\r\n            classes={{\r\n                paper: classes.paper\r\n            }}\r\n        >\r\n            {component}\r\n        </Dialog>\r\n        </StylesProvider>\r\n    )\r\n}\r\n\r\nexport default StyledDialog\r\n","import axios from '../Misc/axios'\r\nimport { setEvents } from '../ReduxStore/appSlice';\r\n\r\nconst deleteEvent = async (dispatch, userId, eventId) => {\r\n    await axios.get('/delete/event', { params: { userId: userId, eventId: eventId } })\r\n        .then(res => dispatch(setEvents(res.data.eventsArray)))\r\n}\r\n\r\nexport default deleteEvent\r\n","import React from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport './ShowEvent.css'\r\n\r\nimport StyledDialog from '../Misc/StyledDialog'\r\nimport { Close, Delete } from '@material-ui/icons'\r\nimport { IconButton } from '@material-ui/core'\r\nimport { selectUser } from '../ReduxStore/appSlice'\r\nimport deleteEvent from '../API/deleteEvent'\r\n\r\nconst ShowEvent = ({ open, onClose, eventId, heading, description, timestamp }) => {\r\n\r\n    const dispatch = useDispatch()\r\n    const user = useSelector(selectUser)\r\n\r\n    const handleDelete = async () => {\r\n        onClose()\r\n        await deleteEvent(dispatch, user.userId, eventId)\r\n    }\r\n\r\n    return (\r\n        <StyledDialog\r\n            open={open}\r\n            onClose={onClose}\r\n            component={\r\n                <div className='showEvent'>\r\n\r\n                    <div className='showEvent__top'>\r\n                        <div className='showEvent__topTitle'>\r\n                            <p>{heading}</p>\r\n                        </div>\r\n\r\n                        <div className='showEvent__topIcons'>\r\n\r\n                            <IconButton onClick={handleDelete}>\r\n                                <Delete style={{ color: '#FF0000' }} />\r\n                            </IconButton>\r\n\r\n                            <IconButton onClick={onClose}>\r\n                                <Close />\r\n                            </IconButton>\r\n\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className='showEvent__body'>\r\n\r\n                        <div className='showEvent__bodyDescription'>\r\n                            <p>{description}</p>\r\n                        </div>\r\n\r\n                        <div className='showEvent__bodyInfo'>\r\n\r\n                            <div className='showEvent__bodyInfoSection'>\r\n                                <h3>Posted by:</h3>\r\n                                <p>You</p>\r\n                            </div>\r\n\r\n                            <div className='showEvent__bodyInfoSection'>\r\n                                <h3>Event Timing:</h3>\r\n                                <p>{new Date(parseInt(timestamp)).toLocaleString()}</p>\r\n                            </div>\r\n\r\n                        </div>\r\n\r\n                    </div>\r\n\r\n                </div >\r\n            }\r\n        />\r\n    )\r\n}\r\n\r\nexport default ShowEvent\r\n","import React, { useState } from 'react'\r\nimport './Event.css'\r\n\r\nimport ShowEvent from './ShowEvent'\r\n\r\nconst Event = ({ eventId, heading, description, timestamp }) => {\r\n\r\n    const [showEvent, setShowEvent] = useState(false)\r\n\r\n    return (\r\n        <div>\r\n            <div className='event' onClick={() => setShowEvent(true)} >\r\n\r\n                <div className='event__top'>\r\n                    <p>You</p>\r\n                    <p>{new Date(parseInt(timestamp)).toLocaleString()}</p>\r\n                </div>\r\n\r\n                <div className='event__bottom'>\r\n                    <p>{heading}</p>\r\n                </div>\r\n\r\n            </div >\r\n\r\n            { showEvent &&\r\n                <ShowEvent\r\n                    open={showEvent}\r\n                    onClose={() => setShowEvent(false)}\r\n                    eventId={eventId}\r\n                    heading={heading}\r\n                    description={description}\r\n                    timestamp={timestamp}\r\n                />\r\n            }\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Event\r\n","import axios from '../Misc/axios'\r\nimport { setEvents } from '../ReduxStore/appSlice';\r\n\r\nconst uploadEvent = async (dispatch, data) => {\r\n    await axios.post('/upload/event', data)\r\n        .then(res => dispatch(setEvents(res.data.eventsArray)))\r\n}\r\n\r\nexport default uploadEvent\r\n","import React, { useState } from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport './CreateNewEvent.css'\r\n\r\nimport StyledDialog from '../Misc/StyledDialog'\r\nimport { Close } from '@material-ui/icons'\r\nimport { Button, IconButton, TextField } from '@material-ui/core'\r\nimport uploadEvent from '../API/uploadEvent'\r\nimport { selectUser } from '../ReduxStore/appSlice'\r\n\r\nconst CreateNewEvent = ({ open, onClose }) => {\r\n\r\n    const dispatch = useDispatch()\r\n    const user = useSelector(selectUser)\r\n\r\n    const [heading, setHeading] = useState('')\r\n    const [description, setDescription] = useState('')\r\n    const [dateTime, setDateTime] = useState('2021-01-01T12:00')\r\n\r\n    const [errorHeading, setErrorHeading] = useState(false)\r\n    const [errorDescription, setErrorDescription] = useState(false)\r\n\r\n    const validateHeading = (value) => {\r\n        if (value.length >= 6 && value.length <= 30) setErrorHeading(false)\r\n        else setErrorHeading(true)\r\n    }\r\n\r\n    const validateDescription = (value) => {\r\n        if (value.length > 0) setErrorDescription(false)\r\n        else setErrorDescription(true)\r\n    }\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault()\r\n        validateHeading(heading)\r\n        validateDescription(description)\r\n\r\n        if (heading.length >= 6 && heading.length <= 30 && description.length > 0) {\r\n            const uploadData = {\r\n                data: {\r\n                    heading: heading,\r\n                    description: description,\r\n                    timestamp: Date.parse(dateTime)\r\n                },\r\n                userId: user.userId\r\n            }\r\n\r\n            await uploadEvent(dispatch, uploadData)\r\n            onClose();\r\n        }\r\n    }\r\n\r\n    return (\r\n        <StyledDialog\r\n            open={open}\r\n            onClose={onClose}\r\n            component={\r\n                <div className='createNewEvent'>\r\n\r\n                    <div className='createNewEvent__top'>\r\n                        <p>Create New Event</p>\r\n                        <IconButton onClick={onClose}>\r\n                            <Close />\r\n                        </IconButton>\r\n                    </div>\r\n\r\n                    <form>\r\n                    \r\n                        <div className='createNewEvent__body'>\r\n\r\n                            <div className='createNewEvent__bodyEntry'>\r\n                                <TextField\r\n                                    label=\"Event Heading\"\r\n                                    value={heading}\r\n                                    onChange={(e) => { setHeading(e.target.value); validateHeading(e.target.value) }}\r\n                                />\r\n                                {errorHeading &&\r\n                                    <p> Heading must be more than 6 and less than 30 characters long </p>}\r\n                            </div>\r\n\r\n                            <div className='createNewEvent__bodyEntry'>\r\n                                <TextField\r\n                                    label=\"Event Description\"\r\n                                    multiline\r\n                                    rowsMax={5}\r\n                                    value={description}\r\n                                    onChange={(e) => { setDescription(e.target.value); validateDescription(e.target.value) }}\r\n                                />\r\n                                {errorDescription &&\r\n                                    <p> Description cannot be empty </p>}\r\n                            </div>\r\n\r\n                            <div className='createNewEvent__bodyEntry'>\r\n                                <TextField\r\n                                    label=\"Event Timing\"\r\n                                    type=\"datetime-local\"\r\n                                    value={dateTime}\r\n                                    onChange={(e) => setDateTime(e.target.value)}\r\n                                />\r\n                            </div>\r\n\r\n                        </div>\r\n\r\n                        <div className='createNewEvent__bottom'>\r\n                            <Button\r\n                                type='submit'\r\n                                onClick={handleSubmit}>\r\n                                <p> Create </p>\r\n                            </Button>\r\n                        </div>\r\n\r\n                    </form>\r\n                </div>\r\n            }\r\n        />\r\n    )\r\n}\r\n\r\nexport default CreateNewEvent\r\n","import React, { useState } from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport './HomeRight.css'\r\n\r\nimport Event from './Event'\r\nimport CreateNewEvent from './CreateNewEvent'\r\nimport { Button } from '@material-ui/core'\r\nimport { Add } from '@material-ui/icons'\r\nimport { selectEvents, selectUser } from '../ReduxStore/appSlice'\r\n\r\nconst HomeRight = () => {\r\n\r\n    const user = useSelector(selectUser)\r\n    const eventData = useSelector(selectEvents)\r\n    const [newEvent, setNewEvent] = useState(false);\r\n\r\n    return (\r\n        <div className='homeRight'>\r\n\r\n            <div className='homeRight__info'>\r\n                <p> Upcoming Events </p>\r\n            </div>\r\n\r\n            <div className='homeRight__new'>\r\n                <Button onClick={() => { setNewEvent(true) }}>\r\n                    <Add />\r\n                    <p> Create New Event</p>\r\n                </Button>\r\n            </div>\r\n\r\n            { newEvent && <CreateNewEvent\r\n                open={newEvent}\r\n                onClose={() => setNewEvent(false)}\r\n                userId={user.userId}\r\n            />\r\n            }\r\n\r\n            <div className='homeRight__eventList'>\r\n                {eventData && eventData.map(event => (\r\n                    <Event\r\n                        key={event._id}\r\n                        eventId={event._id}\r\n                        heading={event.heading}\r\n                        description={event.description}\r\n                        timestamp={event.timestamp}\r\n                    />\r\n                ))\r\n                }\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HomeRight\r\n","import React from 'react'\r\nimport './Home.css'\r\n\r\nimport HomeLeft from './HomeLeft'\r\nimport Feed from '../Feed/Feed'\r\nimport HomeRight from './HomeRight'\r\n\r\nconst Home = () => {\r\n    return (\r\n        <div className='home'>\r\n            <HomeLeft />\r\n            <Feed isAdmin={true} />\r\n            <HomeRight />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Home\r\n","import React, { useEffect, useState } from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { useHistory } from 'react-router-dom'\r\nimport './Room.css'\r\n\r\nimport { Avatar } from '@material-ui/core'\r\nimport { selectUser } from '../ReduxStore/appSlice'\r\nimport axios from '../Misc/axios'\r\n\r\nconst Room = ({ roomId, title, usersArray, setRoomInfo, recentMessageUser, recentMessageContent }) => {\r\n\r\n    const history = useHistory()\r\n    const user = useSelector(selectUser)\r\n    const [newUser, setNewUser] = useState({})\r\n\r\n    useEffect(() => {\r\n        if (!title && usersArray) {\r\n            const fetchId = (usersArray[0] === user.userId) ? (usersArray[1]) : (usersArray[0])\r\n            axios.get('retrieve/user', { params: { userId: fetchId } })\r\n                .then((res) => setNewUser(res.data))\r\n        }\r\n        else {\r\n            setNewUser({ name: title, avatar: '' })\r\n        }\r\n    }, [])\r\n\r\n    const handleSelect = async () => {\r\n        if (title) history.push('/messenger/g/' + roomId);\r\n        else history.push('/messenger/d/' + roomId);\r\n\r\n        await setRoomInfo({\r\n            title: newUser.name,\r\n            avatar: newUser.avatar,\r\n            isGroup: (title) ? ('group') : ('direct'),\r\n            usersArray: usersArray\r\n        })\r\n    }\r\n\r\n    const sliceMessage = () => {\r\n        if(recentMessageContent.length <= 20) {\r\n            return recentMessageContent;\r\n        } else {\r\n            return recentMessageContent.slice(0, 20) + '...';\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className='room' onClick={handleSelect}>\r\n            <Avatar\r\n                className=\"room__avatar\"\r\n                style={{ \"height\": \"30px\", \"width\": \"30px\" }}\r\n                src={newUser.avatar}\r\n            />\r\n\r\n            <div className='room__content'>\r\n                <p>{newUser.name}</p>\r\n\r\n                {recentMessageUser.length > 0 &&\r\n                    <div className='room__contentRecent'>\r\n                        <h3>{recentMessageUser + ':'}</h3>\r\n                        <p>{sliceMessage()}</p>\r\n                    </div>\r\n                }\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Room\r\n","import { createSlice } from '@reduxjs/toolkit'\r\n\r\nexport const roomSlice = createSlice({\r\n    name: 'room',\r\n\r\n    initialState: {\r\n        roomsData: []\r\n    },\r\n\r\n    reducers: {\r\n        setRoomsData: (state, action) => {\r\n            state.roomsData = action.payload\r\n        },\r\n\r\n        appendRoomsData: (state, action) => {\r\n            state.roomsData.push(action.payload)\r\n        },\r\n\r\n        updateRoomData: (state, action) => {\r\n            const ind = state.roomsData.findIndex(obj => obj._id === action.payload._id)\r\n            if (state.roomsData[ind]) state.roomsData[ind] = action.payload\r\n        }\r\n    },\r\n});\r\n\r\nexport const { setRoomsData, appendRoomsData, updateRoomData, setMessagesData, setCurrentRoom } = roomSlice.actions;\r\n\r\nexport const selectRoomsData = state => state.room.roomsData;\r\n\r\nexport default roomSlice.reducer;","import axios from '../Misc/axios'\r\n\r\nconst addDirectRoom = async (queryData) => {\r\n    await axios.post('/create/directRoom', queryData)\r\n        .then((res) => { \r\n            if (!res.data) alert('No such user exists!');\r\n            else if (res.data === 'Same User') alert('Kaan pe marunga');\r\n        })\r\n}\r\n\r\nexport default addDirectRoom","import axios from '../Misc/axios'\r\n\r\nconst addGroupRoom = async (queryData) => {\r\n    await axios.post('/create/groupRoom', queryData)\r\n}\r\n\r\nexport default addGroupRoom","import React, { useEffect, useState } from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport './MessengerLeft.css'\r\n\r\nimport Room from './Room'\r\nimport { IconButton } from \"@material-ui/core\"\r\nimport { Add } from '@material-ui/icons'\r\nimport { selectRoomsData } from '../ReduxStore/roomSlice'\r\nimport { selectUser } from '../ReduxStore/appSlice'\r\n\r\nimport addDirectRoom from '../API/addDirectRoom'\r\nimport addGroupRoom from '../API/addGroupRoom'\r\n\r\nconst MessengerLeft = ({ setRoomInfo }) => {\r\n\r\n    const user = useSelector(selectUser)\r\n    const roomsData = useSelector(selectRoomsData)\r\n    const [sortedRooms, setSortedRooms] = useState([])\r\n    const [userInput, setUserInput] = useState('')\r\n    const [option, setOption] = useState('direct')\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n\r\n        if (userInput) {\r\n            if (option === 'direct') {\r\n                const queryData = {\r\n                    userId: user.userId,\r\n                    userEmail: userInput\r\n                }\r\n\r\n                setUserInput('');\r\n                await addDirectRoom(queryData)\r\n            } else {\r\n                const queryData = {\r\n                    userId: user.userId,\r\n                    title: userInput\r\n                }\r\n\r\n                setUserInput('');\r\n                await addGroupRoom(queryData)\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    const selectOption = (id) => {\r\n        setOption(id);\r\n        document.getElementById('direct').classList.remove(\"messengerLeft__navbarBtn--active\");\r\n        document.getElementById('group').classList.remove(\"messengerLeft__navbarBtn--active\");\r\n        document.getElementById(id).classList.toggle(\"messengerLeft__navbarBtn--active\");\r\n    }\r\n\r\n    useEffect(() => {\r\n        const rooms = [...roomsData]\r\n        rooms.sort((a, b) => {\r\n            if (a.messagesArray.length === 0) return 0;\r\n            if (b.messagesArray.length === 0) return 1;\r\n            return b.messagesArray[0].timestamp - a.messagesArray[0].timestamp;\r\n        })\r\n        setSortedRooms(rooms)\r\n    }, [roomsData])\r\n\r\n\r\n    return (\r\n        <div className='messengerLeft'>\r\n\r\n            <div className='messengerLeft__navbar'>\r\n\r\n                <div\r\n                    id='direct'\r\n                    className='messengerLeft__navbarBtn messengerLeft__navbarBtn--active'\r\n                    onClick={() => selectOption('direct')}\r\n                >\r\n                    Direct\r\n                </div>\r\n\r\n                <div\r\n                    id='group'\r\n                    className='messengerLeft__navbarBtn'\r\n                    onClick={() => selectOption('group')}\r\n                >\r\n                    Groups\r\n                </div>\r\n\r\n            </div>\r\n\r\n            <div className=\"messengerLeft__search\">\r\n                <div className='messengerLeft__searchInput'>\r\n\r\n                    <IconButton onClick={handleSubmit}>\r\n                        <Add />\r\n                    </IconButton>\r\n                    <form>\r\n\r\n                        <input\r\n                            autoComplete=\"off\"\r\n                            placeholder={(option === 'direct') ? (\"Enter User Email\") : (\"Enter Group Name\")}\r\n                            value={userInput}\r\n                            onChange={(e) => setUserInput(e.target.value)}\r\n                        />\r\n\r\n                        <button\r\n                            className='submit--hidden'\r\n                            onClick={handleSubmit}\r\n                            type='submit'\r\n                        />\r\n\r\n                    </form>\r\n\r\n                </div>\r\n            </div>\r\n\r\n            <div className='messengerLeft__rooms'>\r\n\r\n                {(option === 'direct' && sortedRooms) &&\r\n                    sortedRooms.map(room => (\r\n                        !room.title &&\r\n                        <Room\r\n                            key={room._id}\r\n                            roomId={room._id}\r\n                            usersArray={room.usersArray}\r\n                            setRoomInfo={setRoomInfo}\r\n                            recentMessageUser={(room.messagesArray.length) ? (room.messagesArray[0].username) : ('')}\r\n                            recentMessageContent={(room.messagesArray.length) ? (room.messagesArray[0].content) : ('')}\r\n                        />\r\n                    ))\r\n                }\r\n\r\n                {(option === 'group' && sortedRooms) &&\r\n                    sortedRooms.map(room => (\r\n                        room.title &&\r\n                        <Room\r\n                            key={room._id}\r\n                            roomId={room._id}\r\n                            title={room.title}\r\n                            usersArray={room.usersArray}\r\n                            setRoomInfo={setRoomInfo}\r\n                            recentMessageUser={(room.messagesArray.length) ? (room.messagesArray[0].username) : ('')}\r\n                            recentMessageContent={(room.messagesArray.length) ? (room.messagesArray[0].content) : ('')}\r\n                        />\r\n                    ))\r\n                }\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MessengerLeft\r\n","import axios from '../Misc/axios'\r\n\r\nconst removeMessage = async (roomId, messageId) => {\r\n    await axios.get('/delete/message', { params: { roomId: roomId, messageId: messageId } })\r\n}\r\n\r\nexport default removeMessage","import React, { useEffect, useState } from 'react'\r\nimport { useSelector } from 'react-redux';\r\nimport './Chat.css'\r\n\r\nimport { IconButton, Tooltip } from \"@material-ui/core\";\r\nimport { Delete, Reply } from '@material-ui/icons';\r\nimport removeMessage from '../../API/removeMessage';\r\n\r\nconst Chat = ({ roomId, userId, message, messagesArray, setMessageReply }) => {\r\n\r\n    const [messageReplied, setMessageReplied] = useState(null);\r\n\r\n    useEffect(() => {\r\n        if (message && message.replyId) {\r\n\r\n            const ind = messagesArray.findIndex(obj => obj._id === message.replyId)\r\n            if (messagesArray[ind]) {\r\n                setMessageReplied({\r\n                    username: messagesArray[ind].username,\r\n                    content: messagesArray[ind].content\r\n                })\r\n            } else {\r\n                setMessageReplied({\r\n                    username: 'Message has been deleted!',\r\n                    content: ''\r\n                })\r\n            }\r\n        }\r\n    }, [])\r\n\r\n    const handleReplySelection = () => {\r\n        const messageReply = {\r\n            messageId: message._id,\r\n            username: message.username,\r\n            content: message.content\r\n        }\r\n        setMessageReply(messageReply)\r\n    }\r\n\r\n    const handleDelete = async () => {\r\n        await removeMessage(roomId, message._id)\r\n    }\r\n\r\n\r\n    return (\r\n        <div className={`chat ${userId === message.userId && 'chat__sent'}`}>\r\n            <div className='chat__container'>\r\n                <p> {message.username} </p>\r\n\r\n                <div className='chat__message'>\r\n                    <Tooltip\r\n                        title={new Date(parseInt(message.timestamp)).toLocaleString()}\r\n                        enterDelay={1000}\r\n                    >\r\n\r\n                        <div className='chat__messageBody'>\r\n\r\n                            {messageReplied &&\r\n                                <div className='chat__messageBodyReply'>\r\n                                    <h3> {messageReplied.username} </h3>\r\n                                    <p> {messageReplied.content} </p>\r\n                                </div>\r\n                            }\r\n\r\n                            <p> {message.content} </p>\r\n                        </div>\r\n\r\n                    </Tooltip>\r\n\r\n                    <div className='chat__forward'>\r\n\r\n                        <IconButton onClick={handleReplySelection}>\r\n                            <Reply />\r\n                        </IconButton>\r\n\r\n                        {userId === message.userId &&\r\n                            <IconButton onClick={handleDelete}>\r\n                                <Delete />\r\n                            </IconButton>\r\n                        }\r\n\r\n                    </div>\r\n\r\n                </div>\r\n\r\n            </div>\r\n        </div >\r\n    )\r\n}\r\n\r\nexport default Chat;","import axios from \"../Misc/axios\";\r\n\r\nconst addMember = async (email, roomId) => {\r\n\tconsole.log(email, roomId);\r\n\tawait axios.get(\"/update/room/addMember\", { params: { email: email, roomId: roomId } })\r\n\t\t.then((res) => {\r\n\t\t\tif (!res.data) alert(\"No such user exists!\");\r\n\t\t\telse if(res.data === 'Error')  alert(\"Kyu bar bar dalrela hain\");\r\n\t\t});\r\n};\r\n\r\nexport default addMember;\r\n","import React, { useState } from \"react\";\r\nimport \"./AddMember.css\";\r\n\r\nimport addMember from \"../../API/addMember\"\r\nimport { IconButton } from \"@material-ui/core\";\r\nimport { AddRounded } from \"@material-ui/icons\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst AddMember = ({ roomId, onClose }) => {\r\n\r\n\tconst history = useHistory()\r\n\tconst [newMember, setNewMember] = useState(\"\")\r\n\tconst handleSubmit = async (e) => {\r\n\t\te.preventDefault();\r\n\t\tsetNewMember(\"\");\r\n\t\tawait addMember(newMember, roomId)\r\n\t\thistory.replace('/messenger')\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className=\"addMember__dialog\">\r\n\t\t\t<div className=\"addMember__dialogInput\">\r\n\r\n\t\t\t\t<form>\r\n\r\n\t\t\t\t\t<IconButton type=\"submit\" onClick={handleSubmit}>\r\n\t\t\t\t\t\t<AddRounded />\r\n\t\t\t\t\t</IconButton>\r\n\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\tplaceholder=\"Add Member Email\"\r\n\t\t\t\t\t\tvalue={newMember}\r\n\t\t\t\t\t\tonChange={(e) => setNewMember(e.target.value)}\r\n\t\t\t\t\t/>\r\n\r\n\t\t\t\t</form>\r\n\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default AddMember;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useHistory } from 'react-router-dom'\r\nimport \"./GroupMember.css\";\r\n\r\nimport axios from \"../../Misc/axios\";\r\nimport { Avatar, Tooltip } from \"@material-ui/core\";\r\n\r\nconst GroupMember = ({ userId }) => {\r\n\r\n    const history = useHistory()\r\n    const [user, setUser] = useState(null);\r\n\r\n    useEffect(() => {\r\n        axios.get(\"retrieve/user\", { params: { userId: userId } })\r\n            .then((res) => setUser(res.data));\r\n\r\n    }, []);\r\n\r\n    return (\r\n        (user &&\r\n            <Tooltip\r\n                title={user.email}\r\n                enterDelay={1000}\r\n                placement=\"left\"\r\n            >\r\n                <div\r\n                    className=\"groupMember__listItem\"\r\n                    onClick={() => history.replace('/user/' + user.userId)}\r\n                >\r\n                    <Avatar\r\n                        style={{ height: '25px', width: '25px' }}\r\n                        src={user.avatar}\r\n                    />\r\n                    <p>{user.name}</p>\r\n                </div>\r\n\r\n            </Tooltip>\r\n        )\r\n    )\r\n};\r\n\r\nexport default GroupMember;\r\n","import React, { useEffect, useRef } from 'react'\r\n\r\nfunction ClickHandler(ref, outsideHandler) {\r\n    useEffect(() => {\r\n\r\n        function handleClickOutside(e) {\r\n            if (ref.current && !ref.current.contains(e.target)) {\r\n                outsideHandler();\r\n            }\r\n        }\r\n\r\n        document.addEventListener(\"mousedown\", handleClickOutside);\r\n        return () => {\r\n            // Unbind the event listener on clean up\r\n            document.removeEventListener(\"mousedown\", handleClickOutside);\r\n        };\r\n\r\n    }, [ref]);\r\n}\r\n\r\n\r\nconst OutsideAlerter = ({ component, outsideHandler }) => {\r\n    const wrapperRef = useRef(null);\r\n    ClickHandler(wrapperRef, outsideHandler);\r\n    return (\r\n        <div\r\n            ref={wrapperRef}\r\n            style={{ 'width': 'max-content', 'height': 'max-content' }}\r\n        >\r\n            {component}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default OutsideAlerter\r\n","import axios from \"../Misc/axios\";\r\n\r\nconst removeMember = (userId, roomId) => {\r\n    console.log(userId, roomId, \"inside API\");\r\n\t axios\r\n\t\t.get(\"/update/room/removeMember\", { params: { userId: userId, roomId: roomId } })\r\n\t\t.then((res) => {if (!res.data) alert(\"No such user exists!\")});\r\n}\r\n\r\nexport default removeMember;","import axios from \"../Misc/axios\";\r\n\r\nconst removeDirectRoom = (userId, roomId) =>{\r\n\t axios.get(\"/update/room/removeDirectRoom\", { params: { userId: userId, roomId: roomId } })\r\n}\r\n\r\nexport default removeDirectRoom","import React, { useState } from \"react\";\r\nimport { useHistory } from 'react-router-dom'\r\nimport \"./RoomSettings.css\";\r\n\r\nimport { selectUser } from \"../../ReduxStore/appSlice\";\r\nimport { useSelector } from \"react-redux\";\r\nimport AddMember from \"./AddMember\";\r\nimport GroupMember from \"./GroupMember\";\r\nimport OutsideAlerter from \"../../Misc/OutsideAlerter\";\r\nimport {\r\n\tAddRounded,\r\n\tExitToAppRounded,\r\n\tPermIdentityRounded,\r\n} from \"@material-ui/icons\";\r\nimport { IconButton, Tooltip } from \"@material-ui/core\";\r\nimport removeMember from \"../../API/removeMember\";\r\nimport removeDirectRoom from \"../../API/removeDirectRoom\";\r\n\r\n\r\nconst RoomSettings = ({ roomId, isGroup, usersArray }) => {\r\n\r\n\tconst history = useHistory()\r\n\tconst user = useSelector(selectUser);\r\n\tconst [addMemberDialog, setAddMemberDialog] = useState(false);\r\n\tconst [viewMembersDialog, setViewMembersDialog] = useState(false);\r\n\r\n\tconst exitFromGroup = async (e) => {\r\n\t\tawait removeMember(user.userId, roomId);\r\n\t\thistory.replace('/messenger')\r\n\t};\r\n\r\n\tconst deleteRoom = async (e) => {\r\n\t\tawait removeDirectRoom(user.userId, roomId);\r\n\t\thistory.replace('/messenger')\r\n\t};\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t{(isGroup === \"group\") ? (\r\n\t\t\t\t<div className=\"roomSettings\">\r\n\r\n\t\t\t\t\t<Tooltip title=\"Add Member\" enterDelay={1000}>\r\n\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\tclassName=\"roomSetting__listOption\"\r\n\t\t\t\t\t\t\tonClick={() => setAddMemberDialog(!addMemberDialog)}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<IconButton>\r\n\t\t\t\t\t\t\t\t<AddRounded />\r\n\t\t\t\t\t\t\t</IconButton>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</Tooltip>\r\n\r\n\t\t\t\t\t{addMemberDialog && (\r\n\t\t\t\t\t\t<OutsideAlerter\r\n\t\t\t\t\t\t\topen={addMemberDialog}\r\n\t\t\t\t\t\t\toutsideHandler={() => setAddMemberDialog(!addMemberDialog)}\r\n\t\t\t\t\t\t\tcomponent={<AddMember roomId={roomId} />}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t)}\r\n\r\n\t\t\t\t\t<Tooltip title=\"Group Members\" enterDelay={1000}>\r\n\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\tclassName=\"roomSetting__listOption\"\r\n\t\t\t\t\t\t\tonClick={() => setViewMembersDialog(!viewMembersDialog)}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<IconButton>\r\n\t\t\t\t\t\t\t\t<PermIdentityRounded />\r\n\t\t\t\t\t\t\t</IconButton>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</Tooltip>\r\n\r\n\t\t\t\t\t{viewMembersDialog && (\r\n\t\t\t\t\t\t<OutsideAlerter\r\n\t\t\t\t\t\t\topen={viewMembersDialog}\r\n\t\t\t\t\t\t\toutsideHandler={() => setViewMembersDialog(!viewMembersDialog)}\r\n\t\t\t\t\t\t\tcomponent={\r\n\t\t\t\t\t\t\t\t<div className=\"groupMember__dialog\">\r\n\t\t\t\t\t\t\t\t\t{usersArray.map((userId) => (\r\n\t\t\t\t\t\t\t\t\t\t<GroupMember key={userId} userId={userId} />\r\n\t\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t)}\r\n\r\n\t\t\t\t\t<Tooltip title=\"Exit\" enterDelay={1000}>\r\n\t\t\t\t\t\t<div className=\"roomSetting__listOption\">\r\n\t\t\t\t\t\t\t<IconButton onClick={exitFromGroup}>\r\n\t\t\t\t\t\t\t\t<ExitToAppRounded />\r\n\t\t\t\t\t\t\t</IconButton>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</Tooltip>\r\n\r\n\t\t\t\t</div>\r\n\t\t\t) : (\r\n\t\t\t\t\t<div className=\"roomSettings\">\r\n\r\n\t\t\t\t\t\t<Tooltip title=\"Exit\" enterDelay={1000}>\r\n\t\t\t\t\t\t\t<div className=\"roomSetting__listOption\">\r\n\t\t\t\t\t\t\t\t<IconButton onClick={deleteRoom}>\r\n\t\t\t\t\t\t\t\t\t<ExitToAppRounded />\r\n\t\t\t\t\t\t\t\t</IconButton>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</Tooltip>\r\n\r\n\t\t\t\t\t</div>\r\n\t\t\t\t)}\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default RoomSettings;\r\n","import { IconButton } from '@material-ui/core'\r\nimport { Close } from '@material-ui/icons'\r\nimport React from 'react'\r\nimport './ChatReply.css'\r\n\r\nconst ChatReply = ({ messageReply, setMessageReply }) => {\r\n    return (\r\n        <div className='chatReply'>\r\n\r\n            <div className='chatReply__content'>\r\n                <h3> {messageReply.username} </h3>\r\n                <p> {messageReply.content} </p>\r\n            </div>\r\n\r\n            <div className='chatReply__close'>\r\n                <IconButton onClick={() => setMessageReply(null)}>\r\n                    <Close />\r\n                </IconButton>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ChatReply","import axios from '../Misc/axios'\r\n\r\nconst addMessage = async (requestData) => {\r\n    await axios.post('/upload/message', requestData)\r\n}\r\n\r\nexport default addMessage","import React, { useEffect, useState } from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport './Inbox.css';\r\n\r\nimport Chat from './Chat/Chat.js'\r\nimport RoomSettings from './RoomSettings/RoomSettings'\r\nimport ChatReply from './Chat/ChatReply'\r\nimport { Avatar, IconButton } from \"@material-ui/core\";\r\nimport { EmojiEmotions, Send } from '@material-ui/icons';\r\n\r\nimport { selectUser } from '../ReduxStore/appSlice'\r\nimport { selectRoomsData } from '../ReduxStore/roomSlice';\r\nimport addMessage from '../API/addMessage'\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nconst Inbox = ({ roomId, roomInfo }) => {\r\n\r\n    const history = useHistory()\r\n    const user = useSelector(selectUser)\r\n    const roomsData = useSelector(selectRoomsData)\r\n\r\n    const [messages, setMessages] = useState([])\r\n    useEffect(() => {\r\n        if (roomsData && roomId) {\r\n            const ind = roomsData.findIndex(obj => obj._id === roomId)\r\n            if(roomsData[ind]){\r\n                setMessages(roomsData[ind].messagesArray);\r\n            } else {\r\n                history.replace('/messenger')\r\n            }\r\n        }\r\n    }, [roomId, roomsData])\r\n\r\n\r\n    const [newMessage, setNewMessage] = useState('')\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n\r\n        if (newMessage.length > 0) {\r\n            const requestData = {\r\n                data: {\r\n                    userId: user.userId,\r\n                    username: user.username,\r\n                    content: newMessage,\r\n                    timestamp: Date.now(),\r\n                    replyId: (messageReply) ? (messageReply.messageId) : (null)\r\n                },\r\n                roomId: roomId\r\n            }\r\n\r\n            await addMessage(requestData)\r\n            setNewMessage('')\r\n        }\r\n    }\r\n\r\n    const [messageReply, setMessageReply] = useState(null)\r\n    useEffect(() => {\r\n        setMessageReply(null)\r\n    }, [messages])\r\n\r\n    return (\r\n        <div className='inbox'>\r\n            <div className='inbox__navbar'>\r\n\r\n                <div className='inbox__navbarLeft'>\r\n                    <Avatar\r\n                        style={{ \"height\": \"30px\", \"width\": \"30px\" }}\r\n                        src={roomInfo.avatar}\r\n                    />\r\n                    <p>{roomInfo.title}</p>\r\n                </div>\r\n\r\n\r\n                <div className='inbox__navbarRight' >\r\n                    <RoomSettings\r\n                        roomId={roomId}\r\n                        isGroup={roomInfo.isGroup}\r\n                        usersArray={roomInfo.usersArray}\r\n                    />\r\n                </div>\r\n\r\n            </div>\r\n\r\n            <div className='inbox__bodyContainer'>\r\n                <div className='inbox__bodyContainer2'>\r\n                    <div className='inbox__body'>\r\n                        {\r\n                            messages.map(message => (\r\n                                <Chat\r\n                                    key={message.timestamp + message.content}\r\n                                    roomId={roomId}\r\n                                    userId={user.userId}\r\n                                    message={message}\r\n                                    messagesArray={messages}\r\n                                    setMessageReply={setMessageReply}\r\n                                />\r\n                            ))\r\n                        }\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"inbox__bottom\">\r\n\r\n                {messageReply &&\r\n                    <ChatReply\r\n                        messageReply={messageReply}\r\n                        setMessageReply={setMessageReply}\r\n                    />\r\n                }\r\n\r\n                <div className='inbox__bottomInput'>\r\n\r\n                    <IconButton >\r\n                        <EmojiEmotions />\r\n                    </IconButton>\r\n\r\n                    <form>\r\n\r\n                        <input\r\n                            value={newMessage}\r\n                            placeholder=\"Enter your message\"\r\n                            onChange={(e) => setNewMessage(e.target.value)}\r\n                        />\r\n                        <button\r\n                            className='submit--hidden'\r\n                            onClick={handleSubmit}\r\n                            type='submit'\r\n                        />\r\n\r\n                    </form>\r\n\r\n                    <IconButton onClick={handleSubmit}>\r\n                        <Send />\r\n                    </IconButton>\r\n\r\n                </div>\r\n\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Inbox;\r\n\r\n\r\n","import React, { useEffect, useState } from 'react'\r\nimport { useLocation } from 'react-router-dom'\r\nimport './Messenger.css'\r\n\r\nimport MessengerLeft from './MessengerLeft'\r\nimport Inbox from './Inbox'\r\n\r\nconst Messenger = () => {\r\n\r\n    const location = useLocation()\r\n    const [roomPath, setRoomPath] = useState(null)\r\n    const [roomInfo, setRoomInfo] = useState(null)\r\n\r\n    useEffect(() => {\r\n        const path = (location.pathname).split('/')\r\n        if (path.length > 3) {\r\n            setRoomPath(path[3])\r\n        }\r\n        else {\r\n            setRoomPath(null)\r\n        }\r\n    }, [location])\r\n\r\n    return (\r\n        <div className='messenger'>\r\n            <MessengerLeft setRoomInfo={setRoomInfo} />\r\n            {roomPath ? (\r\n                <Inbox roomId={roomPath} roomInfo={roomInfo} />\r\n            ) : (\r\n                    <div className='messenger__initial'>\r\n                        <img\r\n                            src='https://upload.wikimedia.org/wikipedia/commons/a/aa/V-logo.svg'\r\n                            alt='LogoImage'\r\n                        />\r\n                        <p> Get Started </p>\r\n                    </div>\r\n                )}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Messenger\r\n","import React, { useEffect, useState } from 'react'\r\n\r\nimport axios from '../Misc/axios'\r\nimport Post from '../Feed/Post'\r\n\r\nconst PostMiddleware = ({ postId }) => {\r\n\r\n    const [post, setPost] = useState(null)\r\n    useEffect(() => {\r\n        axios.get('retrieve/postData', { params: { postId: postId } })\r\n            .then(res => setPost(res.data))\r\n    }, [])\r\n\r\n    return (\r\n        <>\r\n            {post && post.likesArray && <Post post={post} />}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default PostMiddleware\r\n","import React, { useEffect, useState } from 'react'\r\nimport { useLocation } from 'react-router-dom'\r\n\r\nimport axios from '../Misc/axios'\r\nimport PostMiddleware from './PostMiddleware'\r\n\r\nimport './Profile.css'\r\nconst Profile = () => {\r\n\r\n    const location = useLocation()\r\n    const [user, setUser] = useState(null)\r\n\r\n    useEffect(() => {\r\n        const userId = (location.pathname).split('/')[2]\r\n        axios.get('retrieve/user', { params: { userId: userId } })\r\n            .then((res) => setUser(res.data))\r\n    }, [location])\r\n\r\n    return (\r\n\r\n        <div className='profile'>\r\n            <div className='wrapper'>\r\n\r\n                <div className='profile__card'>\r\n\r\n                    <div className='profile__card__img'>\r\n                        <img src={user && user.avatar} alt=\"\" />\r\n                    </div>\r\n\r\n                    <div className='profile__card__info'>\r\n\r\n                        <div className='profile__card__info__name'>\r\n                            {user && user.name}\r\n                        </div>\r\n\r\n                        <div className='profile__card__info__des'>\r\n                            {user && user.email}\r\n                        </div>\r\n\r\n                    </div>\r\n\r\n                    <div className='profile__feed'>\r\n                        <h3> Posts </h3>\r\n                        <div className='profile__feedPosts'>\r\n\r\n                            {user && user.postsArray.map(postId => (\r\n                                <PostMiddleware\r\n                                    key={postId._id}\r\n                                    postId={postId}\r\n                                />\r\n                            ))\r\n                            }\r\n\r\n                        </div>\r\n                    </div>\r\n\r\n\r\n\r\n                </div>\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Profile;","import axios from \"../Misc/axios\"\r\nimport { setEvents } from \"../ReduxStore/appSlice\";\r\n\r\nconst fetchEvents = async (dispatch, userId) => {\r\n    await axios.get('/retrieve/events', { params: { userId: userId } })\r\n        .then(res => dispatch(setEvents(res.data.eventsArray)))\r\n\r\n}\r\n\r\nexport default fetchEvents","import axios from \"../Misc/axios\"\r\nimport { setUserPosts } from \"../ReduxStore/appSlice\";\r\n\r\nconst fetchUserPosts = async (dispatch, userId) => {\r\n    await axios.get('/retrieve/userPosts', { params: { userId: userId } })\r\n        .then(res => dispatch(setUserPosts(res.data.postsArray)))\r\n\r\n}\r\n\r\nexport default fetchUserPosts","import axios from \"../Misc/axios\"\r\nimport { setPosts } from \"../ReduxStore/postSlice\";\r\n\r\nconst fetchPosts = async (dispatch) => {\r\n    await axios.get('retrieve/posts')\r\n        .then(res => dispatch(setPosts(res.data)))\r\n\r\n}\r\n\r\nexport default fetchPosts","import axios from \"../Misc/axios\"\r\nimport { setRooms } from \"../ReduxStore/appSlice\";\r\n\r\nconst fetchUserRooms = async (dispatch, userId) => {\r\n    await axios.get('/retrieve/events', { params: { userId: userId } })\r\n        .then(res => dispatch(setRooms(res.data.roomsArray)))\r\n}\r\n\r\nexport default fetchUserRooms","import fetchEvents from './fetchEvents'\r\nimport fetchUserPosts from './fetchUserPosts'\r\nimport fetchPosts from './fetchPosts'\r\nimport fetchUserRooms from './fetchUserRooms'\r\n\r\nconst fetchAllData = async (dispatch, userId, roomsData) => {\r\n    fetchEvents(dispatch, userId)\r\n\r\n    fetchUserPosts(dispatch, userId)\r\n    fetchPosts(dispatch)\r\n\r\n    fetchUserRooms(dispatch, userId)\r\n}\r\n\r\nexport default fetchAllData;\r\n\r\n","import axios from \"../Misc/axios\"\r\nimport { appendRoomsData, setRoomsData } from \"../ReduxStore/roomSlice\";\r\n\r\nconst fetchRoomData = async (dispatch, roomId) => {\r\n    axios.get('retrieve/roomData', { params: { roomId: roomId } })\r\n        .then(res => dispatch(appendRoomsData(res.data)))\r\n\r\n}\r\n\r\nconst fetchRoomsData = async (dispatch, roomsData) => {\r\n    await dispatch(setRoomsData([]))\r\n    roomsData.forEach(roomId => {\r\n        fetchRoomData(dispatch, roomId)\r\n    })\r\n}\r\n\r\nexport default fetchRoomsData","import React from \"react\";\r\nimport \"./AboutUs.css\";\r\nimport { LinkedIn, GitHub, Mail } from \"@material-ui/icons\";\r\nimport { IconButton } from \"@material-ui/core\";\r\n\r\nconst AboutUs = () => {\r\n\treturn (\r\n\t\t<div className=\"about\">\r\n\t\t\t<div className=\"about__heading\">Meet the Team</div>\r\n\t\t\t<div className=\"card_container\">\r\n\t\t\t\t<div className=\"card_1 card\">\r\n\t\t\t\t\t<div className=\"card_img\">\r\n\t\t\t\t\t\t<img src=\"https://icon-library.com/images/avatar-icon-images/avatar-icon-images-4.jpg\" />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"card_socialmedia\">\r\n\t\t\t\t\t\t<form action='https://www.linkedin.com/in/puneet-jangid-26a0ba16b/' target=\"_blank\">\r\n\t\t\t\t\t\t\t<IconButton className=\"blue\" type='submit'>\r\n\t\t\t\t\t\t\t\t<LinkedIn />\r\n\t\t\t\t\t\t\t</IconButton>\r\n\t\t\t\t\t\t</form>\r\n\t\t\t\t\t\t<form action='https://github.com/Napster404' target=\"_blank\">\r\n\t\t\t\t\t\t\t<IconButton className=\"black\" type='submit'>\r\n\t\t\t\t\t\t\t\t<GitHub />\r\n\t\t\t\t\t\t\t</IconButton>\r\n\t\t\t\t\t\t</form>\r\n\t\t\t\t\t\t<form action='mailto:puneetjangid349@gmail.com' target=\"_blank\">\r\n\t\t\t\t\t\t\t<IconButton className=\"red\" type='submit'>\r\n\t\t\t\t\t\t\t\t<Mail />\r\n\t\t\t\t\t\t\t</IconButton>\r\n\t\t\t\t\t\t</form>\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t<div className=\"name align_center\">\r\n\t\t\t\t\t\t<h3>Puneet Jangid</h3>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"college_info\">\r\n\t\t\t\t\t\t<div className=\"college_name align_center\">\r\n\t\t\t\t\t\t\t<h5>Delhi Technological University</h5>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className=\"degree align_center\">\r\n\t\t\t\t\t\t\t<h6>Computer Engineering</h6>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"card_2 card\">\r\n\t\t\t\t\t<div className=\"card_img\">\r\n\t\t\t\t\t\t<img src=\"https://icon-library.com/images/avatar-icon-images/avatar-icon-images-4.jpg\" />\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t<div className=\"card_socialmedia\">\r\n\t\t\t\t\t\t<form action='https://www.linkedin.com/in/rahul990/' target=\"_blank\">\r\n\t\t\t\t\t\t\t<IconButton className=\"blue\" type='submit'>\r\n\t\t\t\t\t\t\t\t<LinkedIn />\r\n\t\t\t\t\t\t\t</IconButton>\r\n\t\t\t\t\t\t</form>\r\n\t\t\t\t\t\t<form action='https://github.com/Rahulk990' target=\"_blank\">\r\n\t\t\t\t\t\t\t<IconButton className=\"black\" type='submit'>\r\n\t\t\t\t\t\t\t\t<GitHub />\r\n\t\t\t\t\t\t\t</IconButton>\r\n\t\t\t\t\t\t</form>\r\n\t\t\t\t\t\t<form action='mailto:rahulv0530@gmail.com' target=\"_blank\">\r\n\t\t\t\t\t\t\t<IconButton className=\"red\" type='submit'>\r\n\t\t\t\t\t\t\t\t<Mail />\r\n\t\t\t\t\t\t\t</IconButton>\r\n\t\t\t\t\t\t</form>\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t<div className=\"name align_center\">\r\n\t\t\t\t\t\t<h3>Rahul</h3>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"college_info\">\r\n\t\t\t\t\t\t<div className=\"college_name align_center\">\r\n\t\t\t\t\t\t\t<h5>Delhi Technological University</h5>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className=\"degree align_center\">\r\n\t\t\t\t\t\t\t<h6>Computer Engineering</h6>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default AboutUs;\r\n","import axios from \"../Misc/axios\"\r\nimport { updateRoomData } from \"../ReduxStore/roomSlice\";\r\n\r\nconst fetchRoomData = async (dispatch, roomId) => {\r\n    axios.get('retrieve/roomData', { params: { roomId: roomId } })\r\n        .then(res => dispatch(updateRoomData(res.data)))\r\n}\r\n\r\n\r\nexport default fetchRoomData","import React, { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n\tBrowserRouter as Router,\r\n\tSwitch,\r\n\tRoute,\r\n\tuseHistory,\r\n} from \"react-router-dom\";\r\n\r\nimport Navbar from \"./Components/Navbar/Navbar\";\r\nimport Home from \"./Components/Home/Home\";\r\nimport Messenger from \"./Components/Messenger/Messenger\";\r\nimport Profile from \"./Components/Profile/Profile\";\r\nimport fetchAllData from \"./Components/API/fetchAllData\";\r\nimport { selectRooms, selectUser } from \"./Components/ReduxStore/appSlice\";\r\nimport socketIOClient from \"socket.io-client\";\r\nimport fetchPosts from \"./Components/API/fetchPosts\";\r\nimport fetchUserRooms from \"./Components/API/fetchUserRooms\";\r\nimport fetchRoomsData from \"./Components/API/fetchRoomsData\";\r\nimport Pusher from \"pusher-js\";\r\nimport AboutUs from \"./Components/AboutUs/AboutUs\";\r\nimport fetchRoomData from \"./Components/API/fetchRoomData\";\r\n\r\nconst Main = () => {\r\n\tconst history = useHistory();\r\n\tconst dispatch = useDispatch();\r\n\tconst user = useSelector(selectUser);\r\n\tconst userRooms = useSelector(selectRooms);\r\n\r\n\tuseEffect(() => {\r\n\t\tif (!user) {\r\n\t\t\thistory.push(\"/login\");\r\n\t\t} else {\r\n\t\t\t// Fetch All Data\r\n\t\t\tfetchAllData(dispatch, user.userId, userRooms);\r\n\r\n\t\t\t// Setup Sockets\r\n\t\t\t// const socket = socketIOClient(\"http://localhost:8000\");\r\n\t\t\tconst socket = socketIOClient(\"https://network-backend-server.herokuapp.com/\")\r\n\t\t\tsocket.on(\"refresh\", (data) => fetchPosts(dispatch));\r\n\r\n\t\t\treturn () => {\r\n\t\t\t\tsocket.disconnect();\r\n\t\t\t};\r\n\t\t}\r\n\t}, []);\r\n\r\n\tuseEffect(() => {\r\n\t\tif (user && userRooms) {\r\n\t\t\tfetchRoomsData(dispatch, userRooms);\r\n\t\t}\r\n\t}, [userRooms]);\r\n\r\n\tuseEffect(() => {\r\n\t\tif (user) {\r\n\t\t\t// Setup Pusher\r\n\t\t\tconst pusher = new Pusher(\"d24ba3df0d30f4d2c95e\", { cluster: \"ap2\" });\r\n\r\n\t\t\tconst channel = pusher.subscribe(\"messages\");\r\n\t\t\tchannel.bind(\"inserted\", function (data) {\r\n\t\t\t\tfetchUserRooms(dispatch, user.userId);\r\n\t\t\t});\r\n\r\n\t\t\tchannel.bind(\"updated\", function (data) {\r\n\t\t\t\tfetchRoomData(dispatch, data);\r\n\t\t\t});\r\n\r\n\t\t\treturn () => {\r\n\t\t\t\tchannel.unbind_all();\r\n\t\t\t\tchannel.unsubscribe();\r\n\t\t\t};\r\n\t\t}\r\n\t}, []);\r\n\r\n\treturn (\r\n\t\t<Router>\r\n\t\t\t{user && (\r\n\t\t\t\t<>\r\n\t\t\t\t\t<Navbar />\r\n\t\t\t\t\t<div className=\"app__body\">\r\n\t\t\t\t\t\t<Switch>\r\n\r\n\t\t\t\t\t\t\t<Route exact path=\"/about\">\r\n\t\t\t\t\t\t\t\t<AboutUs />\r\n\t\t\t\t\t\t\t</Route>\r\n\r\n\t\t\t\t\t\t\t<Route exact path=\"/home\">\r\n\t\t\t\t\t\t\t\t<Home />\r\n\t\t\t\t\t\t\t</Route>\r\n\r\n\t\t\t\t\t\t\t<Route path=\"/user\">\r\n\t\t\t\t\t\t\t\t<Profile />\r\n\t\t\t\t\t\t\t</Route>\r\n\r\n\t\t\t\t\t\t\t<Route path=\"/messenger\">\r\n\t\t\t\t\t\t\t\t<Messenger />\r\n\t\t\t\t\t\t\t</Route>\r\n\t\t\t\t\t\t</Switch>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</>\r\n\t\t\t)}\r\n\t\t</Router>\r\n\t);\r\n};\r\n\r\nexport default Main;\r\n","import { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\nimport './App.css';\r\n\r\nimport Login from './Components/Login/Login'\r\nimport Main from './Main'\r\n\r\nfunction App() {  \r\n  return (\r\n    <div className=\"app\">\r\n      <Router>\r\n        <Switch>\r\n\r\n          <Route exact path=\"/login\">\r\n            <Login />\r\n          </Route>\r\n\r\n          <Route path=\"/\">\r\n            <Main />\r\n          </Route>\r\n\r\n        </Switch>\r\n      </Router>\r\n    </div >\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {configureStore} from '@reduxjs/toolkit';\r\nimport appReducer from './appSlice'\r\nimport roomReducer from './roomSlice'\r\nimport postReducer from './postSlice'\r\n\r\nexport default configureStore({\r\n    reducer: {\r\n        app: appReducer,\r\n        room: roomReducer,\r\n        post: postReducer\r\n    },\r\n});","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {Provider} from 'react-redux'\nimport store from './Components/ReduxStore/store'\n\nReactDOM.render(\n  // <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  // </React.StrictMode>\n  ,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}