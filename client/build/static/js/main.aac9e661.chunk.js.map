{"version":3,"sources":["Components/Misc/axios.js","firebase.js","Components/API/createUser.js","Components/ReduxStore/appSlice.js","Components/Login/checkAuth.js","Components/Login/Login.js","Components/Navbar/Navbar.js","Components/Home/HomeLeftRow.js","Components/Home/HomeLeft.js","Components/API/uploadPost.js","Components/Feed/PostSender.js","Components/ReduxStore/postSlice.js","Components/API/removeComment.js","Components/Feed/Comments.js","Components/API/addComment.js","Components/Feed/CommentSender.js","Components/API/deletePost.js","Components/API/removeLike.js","Components/API/addLike.js","Components/API/fetchPostData.js","Components/Feed/Post.js","Components/Feed/Feed.js","Components/Misc/StyledDialog.js","Components/API/deleteEvent.js","Components/Home/ShowEvent.js","Components/Home/Event.js","Components/API/uploadEvent.js","Components/Home/CreateNewEvent.js","Components/Home/HomeRight.js","Components/Home/Home.js","Components/Messenger/Room.js","Components/ReduxStore/roomSlice.js","Components/API/addDirectRoom.js","Components/API/addGroupRoom.js","Components/Messenger/MessengerLeft.js","Components/API/removeMessage.js","Components/Messenger/Chat/Chat.js","Components/API/addMember.js","Components/Messenger/RoomSettings/AddMember.js","Components/Messenger/RoomSettings/GroupMember.js","Components/Misc/OutsideAlerter.js","Components/API/removeMember.js","Components/API/removeDirectRoom.js","Components/Messenger/RoomSettings/RoomSettings.js","Components/Messenger/Chat/ChatReply.js","Components/API/addMessage.js","Components/Messenger/Inbox.js","Components/Messenger/Messenger.js","Components/Profile/Profile.js","Components/API/fetchEvents.js","Components/API/fetchUserPosts.js","Components/API/fetchPosts.js","Components/API/fetchRoomsData.js","Components/API/fetchUserRooms.js","Components/API/fetchAllData.js","Components/AboutUs/AboutUs.js","Components/API/fetchRoomData.js","Components/API/addRoom.js","Components/API/deleteRoom.js","Components/API/updateRooms.js","Main.js","App.js","reportWebVitals.js","Components/ReduxStore/store.js","index.js"],"names":["instance","axios","create","baseURL","auth","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","firestore","storage","provider","GoogleAuthProvider","createUser","a","signInWithPopup","then","result","userData","userId","user","uid","name","displayName","avatar","photoURL","email","saveData","catch","err","console","log","message","post","appSlice","createSlice","initialState","events","userPosts","rooms","reducers","login","state","action","payload","logout","setEvents","sort","b","timestamp","setUserPosts","setRooms","_id","length","every","v","i","appendRoom","push","popRoom","ind","findIndex","obj","roomId","pop","actions","selectUser","app","selectEvents","selectRooms","checkAuth","dispatch","history","onAuthStateChanged","authUser","username","avatarSrc","replace","Login","useHistory","useDispatch","useEffect","signInHandler","className","src","alt","Button","variant","onClick","Navbar","useSelector","location","useLocation","id","pathname","split","document","getElementById","classList","add","remove","Avatar","Search","placeholder","Tooltip","title","enterDelay","Telegram","style","height","width","InfoOutlined","signOut","ExitToAppRounded","HomeLeftRow","Icon","path","HomeLeft","uploadPost","postData","res","data","postsArray","PostSender","useState","postInput","setPostInput","postImage","setPostImage","handleSubmit","e","preventDefault","postText","trim","imageName","Date","now","ref","put","on","snapShot","child","getDownloadURL","fireBaseUrl","text","imgName","value","onChange","target","type","PhotoLibrary","color","file","files","size","alert","IconButton","Close","postSlice","posts","setPosts","appendPosts","updatePost","getPosts","removeComment","postId","commentId","get","params","Comments","comment","handleDelete","parseInt","toLocaleString","content","Delete","addComment","requestData","CommentSender","commentInput","setCommentInput","commentData","Send","deletePost","removeLike","addLike","fetchPosts","Post","showComments","setShowComments","refFromURL","delete","handleRefresh","fetchPostData","handleLike","likesArray","includes","Sync","ThumbUp","ChatBubbleOutline","commentsArray","map","Feed","useStyles","makeStyles","paper","borderRadius","StyledDialog","open","onClose","component","classes","StylesProvider","injectFirst","Dialog","deleteEvent","eventId","eventsArray","ShowEvent","heading","description","Event","showEvent","setShowEvent","uploadEvent","CreateNewEvent","setHeading","setDescription","dateTime","setDateTime","errorHeading","setErrorHeading","errorDescription","setErrorDescription","validateHeading","validateDescription","uploadData","parse","TextField","label","multiline","rowsMax","HomeRight","eventData","newEvent","setNewEvent","Add","event","Home","isAdmin","Room","usersArray","setRoomInfo","recentMessageUser","recentMessageContent","newUser","setNewUser","fetchId","handleSelect","isGroup","slice","roomSlice","roomsData","setRoomsData","appendRoomsData","popRoomsData","updateRoomData","selectRoomsData","room","addDirectRoom","queryData","addGroupRoom","MessengerLeft","sortedRooms","setSortedRooms","userInput","setUserInput","option","setOption","userEmail","selectOption","toggle","messagesArray","autoComplete","removeMessage","messageId","Chat","setMessageReply","messageReplied","setMessageReplied","replyId","messageReply","Reply","addMember","AddMember","newMember","setNewMember","AddRounded","GroupMember","setUser","placement","OutsideAlerter","outsideHandler","wrapperRef","useRef","handleClickOutside","current","contains","addEventListener","removeEventListener","ClickHandler","removeMember","removeDirectRoom","RoomSettings","addMemberDialog","setAddMemberDialog","viewMembersDialog","setViewMembersDialog","exitFromGroup","PermIdentityRounded","ChatReply","addMessage","Inbox","roomInfo","messages","setMessages","setUsersArray","newMessage","setNewMessage","messageText","EmojiEmotions","Messenger","roomPath","setRoomPath","Profile","fetchEvents","fetchUserPosts","fetchRoomData","fetchRoomsData","forEach","fetchUserRooms","roomsArray","fetchAllData","AboutUs","LinkedIn","GitHub","Mail","userRooms","addRoom","deleteRoom","updateRooms","Main","userRoomsRef","socket","socketIOClient","disconnect","exact","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","configureStore","reducer","appReducer","roomReducer","postReducer","ReactDOM","render","store"],"mappings":"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","file":"static/js/main.aac9e661.chunk.js","sourcesContent":["import axios from 'axios'\n\nconst instance = axios.create({\n    // baseURL: 'http://localhost:8000'\n    baseURL: 'https://network-backend-server.herokuapp.com/'\n})\n\nexport default instance","import firebase from 'firebase'\n\nconst firebaseConfig = {\n    apiKey: \"AIzaSyDvIX7cr-dC5lgviOMVErmMIm6pEBVVk2g\",\n    authDomain: \"v-work9.firebaseapp.com\",\n    projectId: \"v-work9\",\n    storageBucket: \"v-work9.appspot.com\",\n    messagingSenderId: \"670208798379\",\n    appId: \"1:670208798379:web:db0737857fdaf9f59551ee\",\n    measurementId: \"G-QD9M7GQG9F\"\n};\n\nconst firebaseApp = firebase.initializeApp(firebaseConfig)\nconst db = firebaseApp.firestore()\nexport const auth = firebase.auth()\nexport const storage = firebase.storage()\nexport const provider = new firebase.auth.GoogleAuthProvider();","import axios from \"../Misc/axios\"\nimport { auth, provider } from \"../../firebase\"\n\n\nconst createUser = async () => {\n\n    // Do Authentication using Firebase\n    await auth.signInWithPopup(provider)\n        .then(result => {\n\n            const userData = {\n                userId: result.user.uid,\n                name: result.user.displayName,\n                avatar: result.user.photoURL,\n                email: result.user.email\n            }\n\n            // Send Data to Database\n            saveData(userData)\n        })\n        .catch(err => console.log(err.message))\n}\n\nconst saveData = async (userData) => {\n    await axios.post('/upload/user', userData)\n}\n\nexport default createUser","import { createSlice } from '@reduxjs/toolkit'\n\nexport const appSlice = createSlice({\n    name: 'app',\n\n    initialState: {\n        user: null,\n        events: [],\n        userPosts: [],\n        rooms: []\n    },\n\n    reducers: {\n        login: (state, action) => {\n            state.user = action.payload\n        },\n\n        logout: (state) => {\n            state.user = null\n            state.events = []\n            state.rooms = []\n            state.userPosts = []\n        },\n\n        setEvents: (state, action) => {\n            action.payload.sort((a, b) => a.timestamp - b.timestamp)\n            state.events = action.payload;\n        },\n\n        setUserPosts: (state, action) => {\n            state.userPosts = action.payload\n        },\n\n        setRooms: (state, action) => {\n            action.payload.sort((a, b) => a._id - b._id)\n            if (!(state.rooms.length === action.payload.length &&\n                state.rooms.every((v, i) => v === action.payload[i]))) {\n                state.rooms = action.payload\n            }\n        },\n\n        appendRoom: (state, action) => {\n            state.rooms.push(action.payload)\n        },\n\n        popRoom: (state, action) => {\n            const ind = state.rooms.findIndex(obj => obj === action.payload.roomId)\n            if (state.rooms[ind]) {\n                state.rooms[ind] = state.rooms[state.rooms.length - 1]\n                state.rooms.pop()\n            }\n        }\n    },\n});\n\nexport const { login, logout, setEvents, setUserPosts, setRooms, appendRoom, popRoom } = appSlice.actions;\n\nexport const selectUser = state => state.app.user;\nexport const selectEvents = state => state.app.events;\nexport const selectPosts = state => state.app.userPosts;\nexport const selectRooms = state => state.app.rooms;\n\nexport default appSlice.reducer;","import { auth } from \"../../firebase\";\nimport { login, logout } from \"../ReduxStore/appSlice\";\n\nconst checkAuth = (dispatch, history) => {\n\tauth.onAuthStateChanged((authUser) => {\n\t\tif (authUser) {\n\t\t\t// Insert User Details into Redux Store\n\t\t\tdispatch(\n\t\t\t\tlogin({\n\t\t\t\t\tuserId: authUser.uid,\n\t\t\t\t\tusername: authUser.displayName,\n\t\t\t\t\tavatarSrc: authUser.photoURL,\n\t\t\t\t})\n\t\t\t);\n\n\t\t\t// Redirect to Home\n\t\t\thistory.replace(\"/home\");\n\t\t} else {\n\t\t\tdispatch(logout());\n\t\t\thistory.replace(\"/login\");\n\t\t}\n\t});\n};\n\nexport default checkAuth;\n","import React, { useEffect } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\nimport \"./Login.css\";\n\nimport { Button } from \"@material-ui/core\";\nimport createUser from \"../API/createUser\";\nimport checkAuth from \"./checkAuth\";\n\nconst Login = () => {\n\tconst history = useHistory();\n\tconst dispatch = useDispatch();\n\n\tuseEffect(() => {\n\t\tcheckAuth(dispatch, history);\n\t}, [])\n\n\tconst signInHandler = async () => {\n\t\tawait createUser();\n\t};\n\n\treturn (\n\t\t<div className=\"login\">\n\t\t\t<div className=\"login__container\">\n\t\t\t\t<img\n\t\t\t\t\tsrc=\"https://upload.wikimedia.org/wikipedia/commons/a/aa/V-logo.svg\"\n\t\t\t\t\talt=\"LogoImage\"\n\t\t\t\t/>\n\t\t\t\t<Button variant=\"outlined\" onClick={signInHandler}>\n\t\t\t\t\tSign In\n\t\t\t\t</Button>\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nexport default Login;\n","import React, { useEffect } from \"react\"\nimport { useSelector } from 'react-redux'\nimport { useHistory, useLocation } from 'react-router-dom'\nimport \"./Navbar.css\";\n\nimport { auth } from \"../../firebase\";\nimport { selectUser } from '../ReduxStore/appSlice'\nimport { Avatar, Tooltip } from \"@material-ui/core\";\nimport {\n\tSearch,\n\tHome,\n\tTelegram,\n\tExitToAppRounded,\n\tInfoOutlined,\n} from \"@material-ui/icons\";\n\nconst Navbar = () => {\n\n\tconst user = useSelector(selectUser)\n\tlet history = useHistory();\n\tlet location = useLocation();\n\n\tuseEffect(() => {\n\t\tconst id = (location.pathname).split('/')[1]\n\t\tif (id && (id === 'home' || id === 'messenger')) {\n\t\t\tdocument.getElementById(id).classList.add(\"navbar__option--active\");\n\t\t\treturn () => {\n\t\t\t\tif (document.getElementById(id)) {\n\t\t\t\t\tdocument.getElementById(id).classList.remove(\"navbar__option--active\");\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}, [location])\n\n\treturn (\n\t\t<div className=\"navbar\">\n\n\t\t\t<div className=\"navbar__left\">\n\n\t\t\t\t<div\n\t\t\t\t\tclassName=\"navbar__logo\"\n\t\t\t\t\tonClick={() => history.replace('/home')}\n\t\t\t\t>\n\t\t\t\t\t<Avatar src=\"https://upload.wikimedia.org/wikipedia/commons/a/aa/V-logo.svg\" />\n\t\t\t\t</div>\n\n\t\t\t\t<div className=\"navbar__input\">\n\t\t\t\t\t<Search />\n\t\t\t\t\t<input placeholder=\"Type here\" />\n\t\t\t\t</div>\n\n\t\t\t</div>\n\n\t\t\t<div className=\"navbar__center\">\n\n\t\t\t\t<Tooltip title=\"Home\" enterDelay={1000}>\n\t\t\t\t\t<div\n\t\t\t\t\t\tid=\"home\"\n\t\t\t\t\t\tclassName=\"navbar__option\"\n\t\t\t\t\t\tonClick={() => history.push(\"/home\")}\n\t\t\t\t\t>\n\t\t\t\t\t\t<Home />\n\t\t\t\t\t</div>\n\t\t\t\t</Tooltip>\n\n\t\t\t\t<Tooltip title=\"Messenger\" enterDelay={1000}>\n\t\t\t\t\t<div\n\t\t\t\t\t\tid=\"messenger\"\n\t\t\t\t\t\tclassName=\"navbar__option\"\n\t\t\t\t\t\tonClick={() => history.push(\"/messenger\")}\n\t\t\t\t\t>\n\t\t\t\t\t\t<Telegram />\n\t\t\t\t\t</div>\n\t\t\t\t</Tooltip>\n\n\t\t\t</div>\n\n\t\t\t<div className=\"navbar__right\">\n\n\t\t\t\t<div\n\t\t\t\t\tid='profile'\n\t\t\t\t\tclassName=\"navbar__info\"\n\t\t\t\t\tonClick={() => history.push(\"/user/\" + user.userId)}\n\t\t\t\t>\n\n\t\t\t\t\t<Avatar\n\t\t\t\t\t\tsrc={user.avatarSrc}\n\t\t\t\t\t\tstyle={{ height: \"25px\", width: \"25px\" }}\n\t\t\t\t\t/>\n\n\t\t\t\t\t<p> {user.username} </p>\n\t\t\t\t</div>\n\n\t\t\t\t<div className=\"navbar__settings\">\n\n\t\t\t\t\t<div\n\t\t\t\t\t\tclassName=\"navbar__settingsOption\"\n\t\t\t\t\t\tonClick={() => history.replace('/about')}\n\t\t\t\t\t>\n\n\t\t\t\t\t\t<InfoOutlined style={{ height: \"25px\", width: \"25px\" }} />\n\t\t\t\t\t\t<p> About Us </p>\n\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div\n\t\t\t\t\t\tclassName=\"navbar__settingsOption\"\n\t\t\t\t\t\tonClick={() => auth.signOut()}\n\t\t\t\t\t>\n\n\t\t\t\t\t\t<ExitToAppRounded style={{ height: \"25px\", width: \"25px\" }} />\n\t\t\t\t\t\t<p> Logout </p>\n\n\t\t\t\t\t</div>\n\n\t\t\t\t</div>\n\n\t\t\t</div>\n\n\t\t</div>\n\t);\n};\n\nexport default Navbar;\n","import React from 'react'\nimport { useHistory } from 'react-router-dom'\nimport './HomeLeftRow.css'\n\nimport { Avatar } from '@material-ui/core'\n\nconst HomeLeftRow = ({ src, Icon, title, path }) => {\n\n    const history = useHistory()\n\n    return (\n        <div className='homeLeftRow' onClick={() => history.replace(path)}>\n\n            {src && <Avatar\n                style={{ \"height\": \"25px\", \"width\": \"25px\", 'margin': \"10px 10px\" }}\n                src={src}\n            />}\n\n            {Icon && <Icon />}\n            <p>{title}</p>\n        </div>\n    )\n}\n\nexport default HomeLeftRow\n","import React from 'react'\nimport { useSelector } from 'react-redux'\nimport './HomeLeft.css'\n\nimport HomeLeftRow from './HomeLeftRow'\nimport { Telegram, InfoOutlined } from '@material-ui/icons'\nimport { selectUser } from '../ReduxStore/appSlice'\n\nconst HomeLeft = () => {\n\n    const user = useSelector(selectUser)\n\n    return (\n        <div className='homeLeft'>\n            <HomeLeftRow src={user.avatarSrc} title={user.username} path={'/user/' + user.userId} />\n            <HomeLeftRow Icon={Telegram} title='Messenger' path={'/messenger'} />\n            <HomeLeftRow Icon={InfoOutlined} title='About Us' path={'/about'} />\n        </div>\n    )\n}\n\nexport default HomeLeft\n","import axios from '../Misc/axios'\nimport { setUserPosts } from '../ReduxStore/appSlice';\n\nconst uploadPost = async (dispatch, postData) => {\n    await axios.post('/upload/post', postData)\n        .then(res => dispatch(setUserPosts(res.data.postsArray)))\n}\n\nexport default uploadPost\n","import React, { useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport './PostSender.css'\n\nimport { Avatar, Button, IconButton } from '@material-ui/core'\nimport { Close, PhotoLibrary } from '@material-ui/icons'\nimport { selectUser } from '../ReduxStore/appSlice'\nimport uploadPost from '../API/uploadPost'\nimport { storage } from '../../firebase'\n\nconst PostSender = () => {\n\n    const dispatch = useDispatch()\n    const user = useSelector(selectUser)\n    const [postInput, setPostInput] = useState('')\n    const [postImage, setPostImage] = useState(null)\n\n    const handleImageChange = (e) => {\n        const file = e.target.files[0]\n        if (file) {\n            if (file.size > 1048576) {\n                alert('File must be less than 1MB')\n            } else {\n                setPostImage(e.target.files[0])\n            }\n        }\n    }\n\n    const handleSubmit = async (e) => {\n        e.preventDefault();\n\n        const postText = postInput.trim()\n        if (postImage && postText.length > 0) {\n            const imageName = Date.now() + postImage.name;\n            const uploadTask = storage.ref(`/images/${imageName}`).put(postImage)\n            uploadTask.on('state_changed',\n                (snapShot) => {\n                    // console.log(snapShot)\n                }, (err) => {\n                    // console.log(err)\n                }, () => {\n                    storage.ref('images').child(imageName).getDownloadURL()\n                        .then(fireBaseUrl => {\n                            const postData = {\n                                userId: user.userId,\n                                username: user.username,\n                                text: postText,\n                                avatar: user.avatarSrc,\n                                imgName: fireBaseUrl,\n                                timestamp: Date.now()\n                            }\n\n                            setPostInput('');\n                            setPostImage(null);\n                            uploadPost(dispatch, postData)\n                        })\n                })\n\n        } else if (postText.length > 0) {\n            const postData = {\n                userId: user.userId,\n                username: user.username,\n                text: postText,\n                avatar: user.avatarSrc,\n                timestamp: Date.now()\n            }\n\n            setPostInput('');\n            await uploadPost(dispatch, postData)\n        }\n    }\n\n    return (\n        <div className='postSender'>\n            <div className='postSender__top'>\n                <Avatar src={user.avatarSrc} />\n\n                <form>\n\n                    <input\n                        value={postInput}\n                        onChange={(e) => setPostInput(e.target.value)}\n                        className='postSender__input'\n                        placeholder=\"What's on your mind?\"\n                    />\n\n                    <Button onClick={handleSubmit} type='submit'>\n                        Submit\n                    </Button>\n\n                </form>\n\n            </div>\n\n            <div className='postSender__bottom'>\n\n                <div className={`postSender__option ${postImage && 'postSender__option--disable'}`}>\n                    <PhotoLibrary style={{ color: \"green\" }} />\n                    <h3> Photos/Videos </h3>\n                    <input type='file' onChange={handleImageChange} />\n                </div>\n\n                {postImage &&\n                    <div className='postSender__optionClose'>\n                        <IconButton onClick={() => setPostImage(null)}>\n                            <Close />\n                        </IconButton>\n                    </div>\n                }\n\n            </div>\n        </div >\n    )\n}\n\nexport default PostSender\n","import { createSlice } from '@reduxjs/toolkit'\n\nexport const postSlice = createSlice({\n    name: 'post',\n\n    initialState: {\n        posts: []\n    },\n\n    reducers: {\n        setPosts: (state, action) => {\n            state.posts = action.payload\n        },\n\n        appendPosts: (state, action) => {\n            state.posts.push(action.payload)\n        },\n        \n        updatePost: (state, action) => {\n            const ind = state.posts.findIndex(obj => obj._id === action.payload._id)\n            state.posts[ind] = action.payload\n        }\n    },\n});\n\nexport const { setPosts, appendPosts, updatePost } = postSlice.actions;\n\nexport const getPosts = state => state.post.posts;\n\nexport default postSlice.reducer;","import axios from '../Misc/axios'\nimport { updatePost } from '../ReduxStore/postSlice';\n\nconst removeComment = async (dispatch, postId, commentId) => {\n    await axios.get('/update/post/removeComment', { params: { postId: postId, commentId: commentId } })\n        .then(res => dispatch(updatePost(res.data)))\n}\n\nexport default removeComment","import React from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport './Comments.css'\n\nimport { Avatar, IconButton, Tooltip } from '@material-ui/core'\nimport { Delete } from '@material-ui/icons'\nimport removeComment from '../API/removeComment'\nimport { selectUser } from '../ReduxStore/appSlice'\n\nconst Comments = ({ postId, comment }) => {\n\n    const dispatch = useDispatch()\n    const user = useSelector(selectUser)\n    const handleDelete = async () => {\n        await removeComment(dispatch, postId, comment._id)\n    }\n\n    return (\n        <div className='comment'>\n            <div className='comment__info'>\n                <Avatar\n                    style={{ width: '30px', height: '30px' }}\n                    src={comment.avatar}\n                />\n\n                <Tooltip title={new Date(parseInt(comment.timestamp)).toLocaleString()} enterDelay={1000} >\n\n                    <div className='comment__body'>\n                        <div className='comment__bodyUsername'>\n                            <p>{comment.username}</p>\n                        </div>\n                        <div className='comment__bodyContent'>\n                            <p>{comment.content}</p>\n                        </div>\n                    </div>\n\n                </Tooltip>\n            </div>\n\n            { (user.userId === comment.userId) &&\n                <IconButton style={{ width: 'fit-content', height: 'fit-content' }} onClick={handleDelete}>\n                    <Delete style={{ color: '#FF0000' }} />\n                </IconButton>\n            }\n\n        </div>\n    )\n}\n\nexport default Comments\n","import axios from '../Misc/axios'\nimport { updatePost } from '../ReduxStore/postSlice';\n\nconst addComment = async (dispatch, requestData) => {\n    await axios.post('/update/post/addComment', requestData)\n        .then(res => dispatch(updatePost(res.data)))\n}\n\nexport default addComment","import React, { useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport './CommentSender.css'\n\nimport { Avatar, IconButton } from \"@material-ui/core\";\nimport { Send } from '@material-ui/icons';\nimport { selectUser } from '../ReduxStore/appSlice'\nimport addComment from '../API/addComment'\n\nconst CommentSender = ({ postId }) => {\n\n    const dispatch = useDispatch()\n    const user = useSelector(selectUser)\n    const [commentInput, setCommentInput] = useState('')\n\n    const handleSubmit = async (e) => {\n        e.preventDefault();\n\n        const comment = commentInput.trim()\n        if (comment.length > 0) {\n            const requestData = {\n                commentData: {\n                    userId: user.userId,\n                    username: user.username,\n                    avatar: user.avatarSrc,\n                    content: comment,\n                    timestamp: Date.now()\n                },\n                postId: postId\n            }\n\n            setCommentInput('');\n            await addComment(dispatch, requestData)\n        }\n    }\n\n    return (\n        <div className='commentSender'>\n            <Avatar\n                style={{ width: '30px', height: '30px' }}\n                src={user.avatarSrc}\n            />\n\n            <form>\n                <div className='commentSender__input'>\n                    <input\n                        placeholder='Enter Comment'\n                        value={commentInput}\n                        onChange={(e) => setCommentInput(e.target.value)}\n                    />\n                    <IconButton\n                        type='submit'\n                        onClick={handleSubmit}\n                    >\n                        <Send />\n                    </IconButton>\n                </div>\n            </form>\n\n        </div>\n    )\n}\n\nexport default CommentSender\n","import axios from '../Misc/axios'\nimport { setUserPosts } from '../ReduxStore/appSlice';\n\nconst deletePost = async (dispatch, userId, postId) => {\n    await axios.get('/delete/post', { params: { userId: userId, postId: postId } })\n        .then(res => dispatch(setUserPosts(res.data.postsArray)))\n}\n\nexport default deletePost\n","import axios from '../Misc/axios'\nimport { updatePost } from '../ReduxStore/postSlice';\n\nconst removeLike = async (dispatch, userId, postId) => {\n    await axios.get('/update/post/removeLike', { params: { userId: userId, postId: postId } })\n        .then(res => dispatch(updatePost(res.data)))\n}\n\nexport default removeLike","import axios from '../Misc/axios'\nimport { updatePost } from '../ReduxStore/postSlice';\n\nconst addLike = async (dispatch, userId, postId) => {\n    await axios.get('/update/post/addLike', { params: { userId: userId, postId: postId } })\n        .then(res => dispatch(updatePost(res.data)))\n}\n\nexport default addLike","import axios from \"../Misc/axios\"\nimport { updatePost } from \"../ReduxStore/postSlice\";\n\nconst fetchPosts = async (dispatch, postId) => {\n    await axios.get('retrieve/postData', { params: { postId: postId } })\n        .then(res => dispatch(updatePost(res.data)))\n\n}\n\nexport default fetchPosts","import React, { useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { useHistory } from 'react-router-dom'\nimport './Post.css'\n\nimport Comment from './Comments'\nimport CommentSender from './CommentSender'\nimport { Avatar, IconButton } from '@material-ui/core'\nimport { ChatBubbleOutline, Delete, Sync, ThumbUp } from '@material-ui/icons'\nimport { selectUser } from '../ReduxStore/appSlice'\n\nimport deletePost from '../API/deletePost'\nimport removeLike from '../API/removeLike'\nimport addLike from '../API/addLike'\nimport fetchPostData from '../API/fetchPostData'\nimport { storage } from '../../firebase'\n\nconst Post = ({ post }) => {\n\n    const history = useHistory()\n    const dispatch = useDispatch()\n    const user = useSelector(selectUser)\n    const [showComments, setShowComments] = useState(false)\n\n    const handleDelete = async () => {\n        if (post.imgName) storage.refFromURL(post.imgName).delete();\n        await deletePost(dispatch, user.userId, post._id)\n    }\n\n    const handleRefresh = async () => {\n        await fetchPostData(dispatch, post._id)\n    }\n\n    const handleLike = async () => {\n        if (post.likesArray.includes(user.userId)) {\n            await removeLike(dispatch, user.userId, post._id)\n        } else {\n            await addLike(dispatch, user.userId, post._id)\n        }\n    }\n\n    return (\n        <div className='post'>\n            <div className='post__top'>\n\n                <div className='post__topLeft'>\n                    <Avatar\n                        className='post__avatar'\n                        src={post.avatar}\n                        onClick={() => history.replace('/user/' + user.userId)}\n                    />\n\n                    <div className='post__topInfo'>\n                        <h3 onClick={() => history.replace('/user/' + post.userId)}>{post.username}</h3>\n                        <p> {new Date(parseInt(post.timestamp)).toLocaleString()} </p>\n                    </div>\n                </div>\n\n                <div className='post__topIcons'>\n\n                    {post.userId === user.userId &&\n                        <IconButton\n                            className='post__topIconsDelete'\n                            onClick={handleDelete}\n                        >\n                            <Delete />\n                        </IconButton>\n                    }\n\n                    <IconButton\n                        className='post__topIconsRefresh'\n                        onClick={handleRefresh}\n                    >\n                        <Sync />\n                    </IconButton>\n\n                </div>\n\n            </div>\n\n            <div className='post__text'>\n                <p>{post.text}</p>\n            </div>\n\n            <div className='post__image'>\n                {post.imgName && <img\n                    src={post.imgName}\n                    alt=''\n                />}\n            </div>\n\n            <div className={`post__bottom ${showComments && 'post__bottom--active'}`}>\n\n                <div\n                    className={`post__option ${post.likesArray.includes(user.userId) && 'post__option--active'}`}\n                    onClick={handleLike}\n                >\n                    <ThumbUp />\n                    <p>Like</p>\n                    <p>{post.likesArray.length}</p>\n                </div>\n\n                <div\n                    className={`post__option ${showComments && 'post__option--active'}`}\n                    onClick={() => setShowComments(!showComments)}\n                >\n                    <ChatBubbleOutline />\n                    <p>Comment</p>\n                    <p>{post.commentsArray.length}</p>\n                </div>\n\n            </div>\n\n            {showComments &&\n                <div className='post__comments'>\n\n                    {\n                        post.commentsArray.map(comment => (\n                            <Comment\n                                key={comment._id}\n                                postId={post._id}\n                                comment={comment}\n                            />\n                        ))\n                    }\n\n                    <CommentSender\n                        postId={post._id}\n                    />\n\n                </div>\n            }\n\n        </div>\n    )\n}\n\nexport default Post\n","import React from 'react'\nimport { useSelector } from 'react-redux'\nimport './Feed.css'\n\nimport PostSender from './PostSender'\nimport Post from './Post'\nimport { getPosts } from '../ReduxStore/postSlice'\n\nconst Feed = () => {\n\n    const postData = useSelector(getPosts)\n    return (\n        <div className='feed'>\n            <PostSender />\n\n            {\n                postData.map(post => (\n                    <Post\n                        key={post._id}\n                        post={post}\n                    />\n                ))\n            }\n\n        </div>\n    )\n}\n\nexport default Feed\n","import React from 'react'\n\nimport { Dialog } from '@material-ui/core'\nimport { makeStyles, StylesProvider } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles({\n    paper: {\n        borderRadius: 30\n    }\n});\n\nconst StyledDialog = ({ open, onClose, component }) => {\n    const classes = useStyles();\n    return (\n        <StylesProvider injectFirst>\n            <Dialog\n            open={open}\n            onClose={onClose}\n            classes={{\n                paper: classes.paper\n            }}\n        >\n            {component}\n        </Dialog>\n        </StylesProvider>\n    )\n}\n\nexport default StyledDialog\n","import axios from '../Misc/axios'\nimport { setEvents } from '../ReduxStore/appSlice';\n\nconst deleteEvent = async (dispatch, userId, eventId) => {\n    await axios.get('/delete/event', { params: { userId: userId, eventId: eventId } })\n        .then(res => dispatch(setEvents(res.data.eventsArray)))\n}\n\nexport default deleteEvent\n","import React from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport './ShowEvent.css'\n\nimport StyledDialog from '../Misc/StyledDialog'\nimport { Close, Delete } from '@material-ui/icons'\nimport { IconButton } from '@material-ui/core'\nimport { selectUser } from '../ReduxStore/appSlice'\nimport deleteEvent from '../API/deleteEvent'\n\nconst ShowEvent = ({ open, onClose, eventId, heading, description, timestamp }) => {\n\n    const dispatch = useDispatch()\n    const user = useSelector(selectUser)\n\n    const handleDelete = async () => {\n        onClose()\n        await deleteEvent(dispatch, user.userId, eventId)\n    }\n\n    return (\n        <StyledDialog\n            open={open}\n            onClose={onClose}\n            component={\n                <div className='showEvent'>\n\n                    <div className='showEvent__top'>\n                        <div className='showEvent__topTitle'>\n                            <p>{heading}</p>\n                        </div>\n\n                        <div className='showEvent__topIcons'>\n\n                            <IconButton onClick={handleDelete}>\n                                <Delete style={{ color: '#FF0000' }} />\n                            </IconButton>\n\n                            <IconButton onClick={onClose}>\n                                <Close />\n                            </IconButton>\n\n                        </div>\n                    </div>\n\n                    <div className='showEvent__body'>\n\n                        <div className='showEvent__bodyDescription'>\n                            <p>{description}</p>\n                        </div>\n\n                        <div className='showEvent__bodyInfo'>\n\n                            <div className='showEvent__bodyInfoSection'>\n                                <h3>Posted by:</h3>\n                                <p>You</p>\n                            </div>\n\n                            <div className='showEvent__bodyInfoSection'>\n                                <h3>Event Timing:</h3>\n                                <p>{new Date(parseInt(timestamp)).toLocaleString()}</p>\n                            </div>\n\n                        </div>\n\n                    </div>\n\n                </div >\n            }\n        />\n    )\n}\n\nexport default ShowEvent\n","import React, { useState } from 'react'\nimport './Event.css'\n\nimport ShowEvent from './ShowEvent'\n\nconst Event = ({ eventId, heading, description, timestamp }) => {\n\n    const [showEvent, setShowEvent] = useState(false)\n\n    return (\n        <div>\n            <div className='event' onClick={() => setShowEvent(true)} >\n\n                <div className='event__top'>\n                    <p>You</p>\n                    <p>{new Date(parseInt(timestamp)).toLocaleString()}</p>\n                </div>\n\n                <div className='event__bottom'>\n                    <p>{heading}</p>\n                </div>\n\n            </div >\n\n            { showEvent &&\n                <ShowEvent\n                    open={showEvent}\n                    onClose={() => setShowEvent(false)}\n                    eventId={eventId}\n                    heading={heading}\n                    description={description}\n                    timestamp={timestamp}\n                />\n            }\n\n        </div>\n    )\n}\n\nexport default Event\n","import axios from '../Misc/axios'\nimport { setEvents } from '../ReduxStore/appSlice';\n\nconst uploadEvent = async (dispatch, data) => {\n    await axios.post('/upload/event', data)\n        .then(res => dispatch(setEvents(res.data.eventsArray)))\n}\n\nexport default uploadEvent\n","import React, { useState } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport './CreateNewEvent.css'\n\nimport StyledDialog from '../Misc/StyledDialog'\nimport { Close } from '@material-ui/icons'\nimport { Button, IconButton, TextField } from '@material-ui/core'\nimport uploadEvent from '../API/uploadEvent'\nimport { selectUser } from '../ReduxStore/appSlice'\n\nconst CreateNewEvent = ({ open, onClose }) => {\n\n    const dispatch = useDispatch()\n    const user = useSelector(selectUser)\n\n    const [heading, setHeading] = useState('')\n    const [description, setDescription] = useState('')\n    const [dateTime, setDateTime] = useState('2021-01-01T12:00')\n\n    const [errorHeading, setErrorHeading] = useState(false)\n    const [errorDescription, setErrorDescription] = useState(false)\n\n    const validateHeading = (value) => {\n        if (value.length >= 6 && value.length <= 30) setErrorHeading(false)\n        else setErrorHeading(true)\n    }\n\n    const validateDescription = (value) => {\n        if (value.length > 0) setErrorDescription(false)\n        else setErrorDescription(true)\n    }\n\n    const handleSubmit = async (e) => {\n        e.preventDefault()\n        validateHeading(heading)\n        validateDescription(description)\n\n        if (heading.length >= 6 && heading.length <= 30 && description.length > 0) {\n            const uploadData = {\n                data: {\n                    heading: heading,\n                    description: description,\n                    timestamp: Date.parse(dateTime)\n                },\n                userId: user.userId\n            }\n\n            await uploadEvent(dispatch, uploadData)\n            onClose();\n        }\n    }\n\n    return (\n        <StyledDialog\n            open={open}\n            onClose={onClose}\n            component={\n                <div className='createNewEvent'>\n\n                    <div className='createNewEvent__top'>\n                        <p>Create New Event</p>\n                        <IconButton onClick={onClose}>\n                            <Close />\n                        </IconButton>\n                    </div>\n\n                    <form>\n                    \n                        <div className='createNewEvent__body'>\n\n                            <div className='createNewEvent__bodyEntry'>\n                                <TextField\n                                    label=\"Event Heading\"\n                                    value={heading}\n                                    onChange={(e) => { setHeading(e.target.value); validateHeading(e.target.value) }}\n                                />\n                                {errorHeading &&\n                                    <p> Heading must be more than 6 and less than 30 characters long </p>}\n                            </div>\n\n                            <div className='createNewEvent__bodyEntry'>\n                                <TextField\n                                    label=\"Event Description\"\n                                    multiline\n                                    rowsMax={5}\n                                    value={description}\n                                    onChange={(e) => { setDescription(e.target.value); validateDescription(e.target.value) }}\n                                />\n                                {errorDescription &&\n                                    <p> Description cannot be empty </p>}\n                            </div>\n\n                            <div className='createNewEvent__bodyEntry'>\n                                <TextField\n                                    label=\"Event Timing\"\n                                    type=\"datetime-local\"\n                                    value={dateTime}\n                                    onChange={(e) => setDateTime(e.target.value)}\n                                />\n                            </div>\n\n                        </div>\n\n                        <div className='createNewEvent__bottom'>\n                            <Button\n                                type='submit'\n                                onClick={handleSubmit}>\n                                <p> Create </p>\n                            </Button>\n                        </div>\n\n                    </form>\n                </div>\n            }\n        />\n    )\n}\n\nexport default CreateNewEvent\n","import React, { useState } from 'react'\nimport { useSelector } from 'react-redux'\nimport './HomeRight.css'\n\nimport Event from './Event'\nimport CreateNewEvent from './CreateNewEvent'\nimport { Button } from '@material-ui/core'\nimport { Add } from '@material-ui/icons'\nimport { selectEvents, selectUser } from '../ReduxStore/appSlice'\n\nconst HomeRight = () => {\n\n    const user = useSelector(selectUser)\n    const eventData = useSelector(selectEvents)\n    const [newEvent, setNewEvent] = useState(false);\n\n    return (\n        <div className='homeRight'>\n\n            <div className='homeRight__info'>\n                <p> Upcoming Events </p>\n            </div>\n\n            <div className='homeRight__new'>\n                <Button onClick={() => { setNewEvent(true) }}>\n                    <Add />\n                    <p> Create New Event</p>\n                </Button>\n            </div>\n\n            { newEvent && <CreateNewEvent\n                open={newEvent}\n                onClose={() => setNewEvent(false)}\n                userId={user.userId}\n            />\n            }\n\n            <div className='homeRight__eventList'>\n                {eventData && eventData.map(event => (\n                    <Event\n                        key={event._id}\n                        eventId={event._id}\n                        heading={event.heading}\n                        description={event.description}\n                        timestamp={event.timestamp}\n                    />\n                ))\n                }\n            </div>\n\n        </div>\n    )\n}\n\nexport default HomeRight\n","import React from 'react'\nimport './Home.css'\n\nimport HomeLeft from './HomeLeft'\nimport Feed from '../Feed/Feed'\nimport HomeRight from './HomeRight'\n\nconst Home = () => {\n    return (\n        <div className='home'>\n            <HomeLeft />\n            <Feed isAdmin={true} />\n            <HomeRight />\n        </div>\n    )\n}\n\nexport default Home\n","import React, { useEffect, useState } from 'react'\nimport { useSelector } from 'react-redux'\nimport { useHistory } from 'react-router-dom'\nimport './Room.css'\n\nimport { Avatar } from '@material-ui/core'\nimport { selectUser } from '../ReduxStore/appSlice'\nimport axios from '../Misc/axios'\n\nconst Room = ({ roomId, title, usersArray, setRoomInfo, recentMessageUser, recentMessageContent }) => {\n\n    const history = useHistory()\n    const user = useSelector(selectUser)\n    const [newUser, setNewUser] = useState({})\n\n    useEffect(() => {\n        if (!title && usersArray) {\n            const fetchId = (usersArray[0] === user.userId) ? (usersArray[1]) : (usersArray[0])\n            axios.get('retrieve/user', { params: { userId: fetchId } })\n                .then((res) => setNewUser(res.data))\n        }\n        else {\n            setNewUser({ name: title, avatar: '' })\n        }\n    }, [])\n\n    const handleSelect = async () => {\n        if (title) history.push('/messenger/g/' + roomId);\n        else history.push('/messenger/d/' + roomId);\n\n        await setRoomInfo({\n            title: newUser.name,\n            avatar: newUser.avatar,\n            isGroup: (title) ? ('group') : ('direct'),\n        })\n    }\n\n    const sliceMessage = () => {\n        if (recentMessageUser && recentMessageUser.length + recentMessageContent.length <= 30) {\n            return recentMessageContent;\n        } else if (recentMessageUser) {\n            return recentMessageContent.slice(0, 30 - recentMessageUser.length) + '...';\n        }\n    }\n\n    return (\n        <div className='room' onClick={handleSelect}>\n            <Avatar\n                className=\"room__avatar\"\n                style={{ \"height\": \"30px\", \"width\": \"30px\" }}\n                src={newUser.avatar}\n            />\n\n            <div className='room__content'>\n                <p>{newUser.name}</p>\n\n                {recentMessageUser && recentMessageUser.length > 0 &&\n                    <div className='room__contentRecent'>\n                        <h3>{recentMessageUser + ':'}</h3>\n                        <p>{sliceMessage()}</p>\n                    </div>\n                }\n\n            </div>\n        </div>\n    )\n}\n\nexport default Room\n","import { createSlice } from '@reduxjs/toolkit'\n\nexport const roomSlice = createSlice({\n    name: 'room',\n\n    initialState: {\n        roomsData: []\n    },\n\n    reducers: {\n        setRoomsData: (state, action) => {\n            state.roomsData = action.payload\n        },\n\n        appendRoomsData: (state, action) => {\n            state.roomsData.push(action.payload)\n        },\n\n        popRoomsData: (state, action) => {\n            const ind = state.roomsData.findIndex(obj => obj._id === action.payload.roomId)\n            if (state.roomsData[ind]) {\n                console.log(ind);\n                state.roomsData[ind] = state.roomsData[state.roomsData.length - 1]\n                state.roomsData.pop()\n            }\n        },\n\n        updateRoomData: (state, action) => {\n            const ind = state.roomsData.findIndex(obj => obj._id === action.payload._id)\n            if (state.roomsData[ind]) state.roomsData[ind] = action.payload\n        }\n    },\n});\n\nexport const { setRoomsData, appendRoomsData, popRoomsData, updateRoomData } = roomSlice.actions;\n\nexport const selectRoomsData = state => state.room.roomsData;\n\nexport default roomSlice.reducer;","import axios from '../Misc/axios'\n\nconst addDirectRoom = async (queryData) => {\n    await axios.post('/create/directRoom', queryData)\n        .then((res) => { \n            if (!res.data) alert('No such user exists!');\n            else if (res.data === 'Same User') alert('Not Possible!');\n        })\n}\n\nexport default addDirectRoom","import axios from '../Misc/axios'\n\nconst addGroupRoom = async (queryData) => {\n    await axios.post('/create/groupRoom', queryData)\n}\n\nexport default addGroupRoom","import React, { useEffect, useState } from 'react'\nimport { useSelector } from 'react-redux'\nimport './MessengerLeft.css'\n\nimport Room from './Room'\nimport { IconButton } from \"@material-ui/core\"\nimport { Add } from '@material-ui/icons'\nimport { selectRoomsData } from '../ReduxStore/roomSlice'\nimport { selectUser } from '../ReduxStore/appSlice'\n\nimport addDirectRoom from '../API/addDirectRoom'\nimport addGroupRoom from '../API/addGroupRoom'\n\nconst MessengerLeft = ({ setRoomInfo }) => {\n\n    const user = useSelector(selectUser)\n    const roomsData = useSelector(selectRoomsData)\n    const [sortedRooms, setSortedRooms] = useState([])\n    const [userInput, setUserInput] = useState('')\n    const [option, setOption] = useState('direct')\n\n    const handleSubmit = async (e) => {\n        e.preventDefault();\n\n        if (userInput) {\n            if (option === 'direct') {\n                const queryData = {\n                    userId: user.userId,\n                    userEmail: userInput\n                }\n\n                setUserInput('');\n                await addDirectRoom(queryData)\n            } else {\n                const queryData = {\n                    userId: user.userId,\n                    title: userInput\n                }\n\n                setUserInput('');\n                await addGroupRoom(queryData)\n            }\n        }\n\n    }\n\n    const selectOption = (id) => {\n        setOption(id);\n        document.getElementById('direct').classList.remove(\"messengerLeft__navbarBtn--active\");\n        document.getElementById('group').classList.remove(\"messengerLeft__navbarBtn--active\");\n        document.getElementById(id).classList.toggle(\"messengerLeft__navbarBtn--active\");\n    }\n\n    useEffect(() => {\n        const rooms = [...roomsData]\n        rooms.sort((a, b) => {\n            if (a.messagesArray.length === 0) return 0;\n            if (b.messagesArray.length === 0) return 1;\n            return b.messagesArray[0].timestamp - a.messagesArray[0].timestamp;\n        })\n        setSortedRooms(rooms)\n    }, [roomsData])\n\n\n    return (\n        <div className='messengerLeft'>\n\n            <div className='messengerLeft__navbar'>\n\n                <div\n                    id='direct'\n                    className='messengerLeft__navbarBtn messengerLeft__navbarBtn--active'\n                    onClick={() => selectOption('direct')}\n                >\n                    Direct\n                </div>\n\n                <div\n                    id='group'\n                    className='messengerLeft__navbarBtn'\n                    onClick={() => selectOption('group')}\n                >\n                    Groups\n                </div>\n\n            </div>\n\n            <div className=\"messengerLeft__search\">\n                <div className='messengerLeft__searchInput'>\n\n                    <IconButton onClick={handleSubmit}>\n                        <Add />\n                    </IconButton>\n                    <form>\n\n                        <input\n                            autoComplete=\"off\"\n                            placeholder={(option === 'direct') ? (\"Enter User Email\") : (\"Enter Group Name\")}\n                            value={userInput}\n                            onChange={(e) => setUserInput(e.target.value)}\n                        />\n\n                        <button\n                            className='submit--hidden'\n                            onClick={handleSubmit}\n                            type='submit'\n                        />\n\n                    </form>\n\n                </div>\n            </div>\n\n            <div className='messengerLeft__rooms'>\n\n                {(option === 'direct' && sortedRooms) &&\n                    sortedRooms.map(room => (\n                        !room.title &&\n                        <Room\n                            key={room._id}\n                            roomId={room._id}\n                            usersArray={room.usersArray}\n                            setRoomInfo={setRoomInfo}\n                            recentMessageUser={(room.messagesArray.length) ? (room.messagesArray[0].username) : ('')}\n                            recentMessageContent={(room.messagesArray.length) ? (room.messagesArray[0].content) : ('')}\n                        />\n                    ))\n                }\n\n                {(option === 'group' && sortedRooms) &&\n                    sortedRooms.map(room => (\n                        room.title &&\n                        <Room\n                            key={room._id}\n                            roomId={room._id}\n                            title={room.title}\n                            usersArray={room.usersArray}\n                            setRoomInfo={setRoomInfo}\n                            recentMessageUser={(room.messagesArray.length) ? (room.messagesArray[0].username) : ('')}\n                            recentMessageContent={(room.messagesArray.length) ? (room.messagesArray[0].content) : ('')}\n                        />\n                    ))\n                }\n\n            </div>\n        </div>\n    )\n}\n\nexport default MessengerLeft\n","import axios from '../Misc/axios'\n\nconst removeMessage = (roomId, messageId) => {\n    axios.get('/delete/message', { params: { roomId: roomId, messageId: messageId } })\n}\n\nexport default removeMessage","import React, { useEffect, useState } from 'react'\nimport { useSelector } from 'react-redux';\nimport './Chat.css'\n\nimport { IconButton, Tooltip } from \"@material-ui/core\";\nimport { Delete, Reply } from '@material-ui/icons';\nimport removeMessage from '../../API/removeMessage';\n\nconst Chat = ({ roomId, userId, message, messagesArray, setMessageReply }) => {\n\n    const [messageReplied, setMessageReplied] = useState(null);\n\n    useEffect(() => {\n        if (message && message.replyId) {\n\n            const ind = messagesArray.findIndex(obj => obj._id === message.replyId)\n            if (messagesArray[ind]) {\n                setMessageReplied({\n                    username: messagesArray[ind].username,\n                    content: messagesArray[ind].content\n                })\n            } else {\n                setMessageReplied({\n                    username: 'Message has been deleted!',\n                    content: ''\n                })\n            }\n        }\n    }, [])\n\n    const handleReplySelection = () => {\n        const messageReply = {\n            messageId: message._id,\n            username: message.username,\n            content: message.content\n        }\n        setMessageReply(messageReply)\n    }\n\n    const handleDelete = () => {\n        removeMessage(roomId, message._id)\n    }\n\n\n    return (\n        <>\n            {message.replyId === 'AAAAA' ? (\n                <div className='chat chat__info'>\n                    <div className='chat__infoContent'>\n                        <p>{message.content}</p>\n                    </div>\n                </div>\n            ) : (\n                    <div className={`chat ${userId === message.userId && 'chat__sent'}`}>\n                        <div className='chat__container'>\n                            <p> {message.username} </p>\n\n                            <div className='chat__message'>\n                                <Tooltip\n                                    title={new Date(parseInt(message.timestamp)).toLocaleString()}\n                                    enterDelay={1000}\n                                >\n\n                                    <div className='chat__messageBody'>\n\n                                        {messageReplied &&\n                                            <div className='chat__messageBodyReply'>\n                                                <h3> {messageReplied.username} </h3>\n                                                <p> {messageReplied.content} </p>\n                                            </div>\n                                        }\n\n                                        <p> {message.content} </p>\n                                    </div>\n\n                                </Tooltip>\n\n                                <div className='chat__forward'>\n\n                                    <IconButton onClick={handleReplySelection}>\n                                        <Reply />\n                                    </IconButton>\n\n                                    {userId === message.userId &&\n                                        <IconButton onClick={handleDelete}>\n                                            <Delete />\n                                        </IconButton>\n                                    }\n\n                                </div>\n\n                            </div>\n\n                        </div>\n                    </div >\n                )}\n        </>\n\n\n    )\n}\n\nexport default Chat;","import axios from \"../Misc/axios\";\n\nconst addMember = (email, roomId) => {\n\taxios.get(\"/update/room/addMember\", { params: { email: email, roomId: roomId } })\n\t\t.then((res) => {\n\t\t\tif (!res.data) alert(\"No such user exists!\");\n\t\t\telse if (res.data === 'Error') alert(\"User is already present in the Group\");\n\t\t});\n};\n\nexport default addMember;\n","import React, { useState } from \"react\";\nimport \"./AddMember.css\";\n\nimport addMember from \"../../API/addMember\"\nimport { IconButton } from \"@material-ui/core\";\nimport { AddRounded } from \"@material-ui/icons\";\n\nconst AddMember = ({ roomId }) => {\n\n\tconst [newMember, setNewMember] = useState(\"\")\n\tconst handleSubmit = async (e) => {\n\t\te.preventDefault();\n\t\tsetNewMember(\"\");\n\t\tawait addMember(newMember, roomId)\n\t}\n\n\treturn (\n\t\t<div className=\"addMember__dialog\">\n\t\t\t<div className=\"addMember__dialogInput\">\n\n\t\t\t\t<form>\n\n\t\t\t\t\t<IconButton type=\"submit\" onClick={handleSubmit}>\n\t\t\t\t\t\t<AddRounded />\n\t\t\t\t\t</IconButton>\n\n\t\t\t\t\t<input\n\t\t\t\t\t\tplaceholder=\"Add Member Email\"\n\t\t\t\t\t\tvalue={newMember}\n\t\t\t\t\t\tonChange={(e) => setNewMember(e.target.value)}\n\t\t\t\t\t/>\n\n\t\t\t\t</form>\n\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nexport default AddMember;\n","import React, { useEffect, useState } from \"react\";\nimport { useHistory } from 'react-router-dom'\nimport \"./GroupMember.css\";\n\nimport axios from \"../../Misc/axios\";\nimport { Avatar, Tooltip } from \"@material-ui/core\";\n\nconst GroupMember = ({ userId }) => {\n\n    const history = useHistory()\n    const [user, setUser] = useState(null);\n\n    useEffect(() => {\n        axios.get(\"retrieve/user\", { params: { userId: userId } })\n            .then((res) => setUser(res.data));\n    }, []);\n\n    return (\n        (user &&\n            <Tooltip\n                title={user.email}\n                enterDelay={1000}\n                placement=\"left\"\n            >\n                <div\n                    className=\"groupMember__listItem\"\n                    onClick={() => history.replace('/user/' + user.userId)}\n                >\n                    <Avatar\n                        style={{ height: '25px', width: '25px' }}\n                        src={user.avatar}\n                    />\n                    <p>{user.name}</p>\n                </div>\n\n            </Tooltip>\n        )\n    )\n};\n\nexport default GroupMember;\n","import React, { useEffect, useRef } from 'react'\n\nfunction ClickHandler(ref, outsideHandler) {\n    useEffect(() => {\n\n        function handleClickOutside(e) {\n            if (ref.current && !ref.current.contains(e.target)) {\n                outsideHandler();\n            }\n        }\n\n        document.addEventListener(\"mousedown\", handleClickOutside);\n        return () => {\n            // Unbind the event listener on clean up\n            document.removeEventListener(\"mousedown\", handleClickOutside);\n        };\n\n    }, [ref]);\n}\n\n\nconst OutsideAlerter = ({ component, outsideHandler }) => {\n    const wrapperRef = useRef(null);\n    ClickHandler(wrapperRef, outsideHandler);\n    return (\n        <div\n            ref={wrapperRef}\n            style={{ 'width': 'max-content', 'height': 'max-content' }}\n        >\n            {component}\n        </div>\n    )\n}\n\nexport default OutsideAlerter\n","import axios from \"../Misc/axios\";\n\nconst removeMember = (userId, roomId) => {\n\t axios\n\t\t.get(\"/update/room/removeMember\", { params: { userId: userId, roomId: roomId } })\n\t\t.then((res) => {if (!res.data) alert(\"No such user exists!\")});\n}\n\nexport default removeMember;","import axios from \"../Misc/axios\";\n\nconst removeDirectRoom = (roomId) =>{\n\t axios.get(\"/update/room/removeDirectRoom\", { params: { roomId: roomId } })\n}\n\nexport default removeDirectRoom","import React, { useState } from \"react\";\nimport { useHistory } from 'react-router-dom'\nimport \"./RoomSettings.css\";\n\nimport { selectUser } from \"../../ReduxStore/appSlice\";\nimport { useSelector } from \"react-redux\";\nimport AddMember from \"./AddMember\";\nimport GroupMember from \"./GroupMember\";\nimport OutsideAlerter from \"../../Misc/OutsideAlerter\";\nimport {\n\tAddRounded,\n\tExitToAppRounded,\n\tPermIdentityRounded,\n} from \"@material-ui/icons\";\nimport { IconButton, Tooltip } from \"@material-ui/core\";\nimport removeMember from \"../../API/removeMember\";\nimport removeDirectRoom from \"../../API/removeDirectRoom\";\n\n\nconst RoomSettings = ({ roomId, isGroup, usersArray }) => {\n\n\tconst history = useHistory()\n\tconst user = useSelector(selectUser);\n\tconst [addMemberDialog, setAddMemberDialog] = useState(false);\n\tconst [viewMembersDialog, setViewMembersDialog] = useState(false);\n\n\tconst exitFromGroup = async (e) => {\n\t\tawait removeMember(user.userId, roomId);\n\t\thistory.replace('/messenger')\n\t};\n\n\tconst deleteRoom = (e) => {\n\t\tremoveDirectRoom(roomId);\n\t\thistory.replace('/messenger')\n\t};\n\n\treturn (\n\t\t<>\n\t\t\t{(isGroup === \"group\") ? (\n\t\t\t\t<div className=\"roomSettings\">\n\n\t\t\t\t\t<Tooltip title=\"Add Member\" enterDelay={1000}>\n\t\t\t\t\t\t<div\n\t\t\t\t\t\t\tclassName=\"roomSetting__listOption\"\n\t\t\t\t\t\t\tonClick={() => setAddMemberDialog(!addMemberDialog)}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<IconButton>\n\t\t\t\t\t\t\t\t<AddRounded />\n\t\t\t\t\t\t\t</IconButton>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</Tooltip>\n\n\t\t\t\t\t{addMemberDialog && (\n\t\t\t\t\t\t<OutsideAlerter\n\t\t\t\t\t\t\topen={addMemberDialog}\n\t\t\t\t\t\t\toutsideHandler={() => setAddMemberDialog(!addMemberDialog)}\n\t\t\t\t\t\t\tcomponent={<AddMember roomId={roomId} />}\n\t\t\t\t\t\t/>\n\t\t\t\t\t)}\n\n\t\t\t\t\t<Tooltip title=\"Group Members\" enterDelay={1000}>\n\t\t\t\t\t\t<div\n\t\t\t\t\t\t\tclassName=\"roomSetting__listOption\"\n\t\t\t\t\t\t\tonClick={() => setViewMembersDialog(!viewMembersDialog)}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<IconButton>\n\t\t\t\t\t\t\t\t<PermIdentityRounded />\n\t\t\t\t\t\t\t</IconButton>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</Tooltip>\n\n\t\t\t\t\t{viewMembersDialog && (\n\t\t\t\t\t\t<OutsideAlerter\n\t\t\t\t\t\t\topen={viewMembersDialog}\n\t\t\t\t\t\t\toutsideHandler={() => setViewMembersDialog(!viewMembersDialog)}\n\t\t\t\t\t\t\tcomponent={\n\t\t\t\t\t\t\t\t<div className=\"groupMember__dialog\">\n\t\t\t\t\t\t\t\t\t{usersArray.map((userId) => (\n\t\t\t\t\t\t\t\t\t\t<GroupMember key={userId} userId={userId} />\n\t\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t/>\n\t\t\t\t\t)}\n\n\t\t\t\t\t<Tooltip title=\"Exit\" enterDelay={1000}>\n\t\t\t\t\t\t<div className=\"roomSetting__listOption\">\n\t\t\t\t\t\t\t<IconButton onClick={exitFromGroup}>\n\t\t\t\t\t\t\t\t<ExitToAppRounded />\n\t\t\t\t\t\t\t</IconButton>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</Tooltip>\n\n\t\t\t\t</div>\n\t\t\t) : (\n\t\t\t\t\t<div className=\"roomSettings\">\n\n\t\t\t\t\t\t<Tooltip title=\"Exit\" enterDelay={1000}>\n\t\t\t\t\t\t\t<div className=\"roomSetting__listOption\">\n\t\t\t\t\t\t\t\t<IconButton onClick={deleteRoom}>\n\t\t\t\t\t\t\t\t\t<ExitToAppRounded />\n\t\t\t\t\t\t\t\t</IconButton>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</Tooltip>\n\n\t\t\t\t\t</div>\n\t\t\t\t)}\n\t\t</>\n\t);\n};\n\nexport default RoomSettings;\n","import { IconButton } from '@material-ui/core'\nimport { Close } from '@material-ui/icons'\nimport React from 'react'\nimport './ChatReply.css'\n\nconst ChatReply = ({ messageReply, setMessageReply }) => {\n    return (\n        <div className='chatReply'>\n\n            <div className='chatReply__content'>\n                <h3> {messageReply.username} </h3>\n                <p> {messageReply.content} </p>\n            </div>\n\n            <div className='chatReply__close'>\n                <IconButton onClick={() => setMessageReply(null)}>\n                    <Close />\n                </IconButton>\n            </div>\n\n        </div>\n    )\n}\n\nexport default ChatReply","import axios from '../Misc/axios'\n\nconst addMessage = (requestData) => {\n    axios.post('/upload/message', requestData)\n}\n\nexport default addMessage","import React, { useEffect, useState } from 'react'\nimport { useSelector } from 'react-redux'\nimport './Inbox.css';\n\nimport Chat from './Chat/Chat.js'\nimport RoomSettings from './RoomSettings/RoomSettings'\nimport ChatReply from './Chat/ChatReply'\nimport { Avatar, IconButton } from \"@material-ui/core\";\nimport { EmojiEmotions, Send } from '@material-ui/icons';\n\nimport { selectUser } from '../ReduxStore/appSlice'\nimport { selectRoomsData } from '../ReduxStore/roomSlice';\nimport addMessage from '../API/addMessage'\nimport { useHistory } from 'react-router-dom';\n\nconst Inbox = ({ roomId, roomInfo }) => {\n\n    const history = useHistory()\n    const user = useSelector(selectUser)\n    const roomsData = useSelector(selectRoomsData)\n\n    const [messages, setMessages] = useState([])\n    const [usersArray, setUsersArray] = useState([])\n    useEffect(() => {\n        if (roomsData && roomId) {\n            const ind = roomsData.findIndex(obj => obj._id === roomId)\n            if (roomsData[ind]) {\n                setMessages(roomsData[ind].messagesArray);\n                setUsersArray(roomsData[ind].usersArray)\n            } else {\n                history.replace('/messenger')\n            }\n        }\n    }, [roomId, roomsData])\n\n\n    const [newMessage, setNewMessage] = useState('')\n    const handleSubmit = (e) => {\n        e.preventDefault();\n\n        const messageText = newMessage.trim()\n        if (messageText.length > 0) {\n            const requestData = {\n                data: {\n                    userId: user.userId,\n                    username: user.username,\n                    content: messageText,\n                    timestamp: Date.now(),\n                    replyId: (messageReply) ? (messageReply.messageId) : (null)\n                },\n                roomId: roomId\n            }\n\n            addMessage(requestData)\n            setNewMessage('')\n        }\n    }\n\n    const [messageReply, setMessageReply] = useState(null)\n    useEffect(() => {\n        setMessageReply(null)\n    }, [messages])\n\n    return (\n        <div className='inbox'>\n            <div className='inbox__navbar'>\n\n                <div className='inbox__navbarLeft'>\n                    <Avatar\n                        style={{ \"height\": \"30px\", \"width\": \"30px\" }}\n                        src={roomInfo.avatar}\n                    />\n                    <p>{roomInfo.title}</p>\n                </div>\n\n\n                <div className='inbox__navbarRight' >\n                    <RoomSettings\n                        roomId={roomId}\n                        isGroup={roomInfo.isGroup}\n                        usersArray={usersArray}\n                    />\n                </div>\n\n            </div>\n\n            <div className='inbox__bodyContainer'>\n                <div className='inbox__bodyContainer2'>\n                    <div className='inbox__body'>\n                        {\n                            messages.map(message => (\n                                <Chat\n                                    key={message.timestamp + message.content}\n                                    roomId={roomId}\n                                    userId={user.userId}\n                                    message={message}\n                                    messagesArray={messages}\n                                    setMessageReply={setMessageReply}\n                                />\n                            ))\n                        }\n                    </div>\n                </div>\n            </div>\n\n            <div className=\"inbox__bottom\">\n\n                {messageReply &&\n                    <ChatReply\n                        messageReply={messageReply}\n                        setMessageReply={setMessageReply}\n                    />\n                }\n\n                <div className='inbox__bottomInput'>\n\n                    <IconButton >\n                        <EmojiEmotions />\n                    </IconButton>\n\n                    <form>\n\n                        <input\n                            value={newMessage}\n                            placeholder=\"Enter your message\"\n                            onChange={(e) => setNewMessage(e.target.value)}\n                        />\n                        <button\n                            className='submit--hidden'\n                            onClick={handleSubmit}\n                            type='submit'\n                        />\n\n                    </form>\n\n                    <IconButton onClick={handleSubmit}>\n                        <Send />\n                    </IconButton>\n\n                </div>\n\n            </div>\n\n        </div>\n    )\n}\n\nexport default Inbox;\n\n\n","import React, { useEffect, useState } from 'react'\nimport { useLocation } from 'react-router-dom'\nimport './Messenger.css'\n\nimport MessengerLeft from './MessengerLeft'\nimport Inbox from './Inbox'\n\nconst Messenger = () => {\n\n    const location = useLocation()\n    const [roomPath, setRoomPath] = useState(null)\n    const [roomInfo, setRoomInfo] = useState(null)\n\n    useEffect(() => {\n        const path = (location.pathname).split('/')\n        if (path.length > 3) {\n            setRoomPath(path[3])\n        }\n        else {\n            setRoomPath(null)\n        }\n    }, [location])\n\n    return (\n        <div className='messenger'>\n            <MessengerLeft setRoomInfo={setRoomInfo} />\n            {roomPath ? (\n                <Inbox roomId={roomPath} roomInfo={roomInfo} />\n            ) : (\n                    <div className='messenger__initial'>\n                        <img\n                            src='https://upload.wikimedia.org/wikipedia/commons/a/aa/V-logo.svg'\n                            alt='LogoImage'\n                        />\n                        <p> Get Started </p>\n                    </div>\n                )}\n        </div>\n    )\n}\n\nexport default Messenger\n","import React, { useEffect, useState } from 'react'\nimport { useSelector } from 'react-redux'\nimport { useLocation } from 'react-router-dom'\n\nimport axios from '../Misc/axios'\nimport { getPosts } from '../ReduxStore/postSlice'\nimport Post from '../Feed/Post'\n\nimport './Profile.css'\nconst Profile = () => {\n\n    const location = useLocation()\n    const [user, setUser] = useState(null)\n    const postData = useSelector(getPosts)\n\n    useEffect(() => {\n        const userId = (location.pathname).split('/')[2]\n        axios.get('retrieve/user', { params: { userId: userId } })\n            .then((res) => setUser(res.data))\n    }, [location])\n\n    return (\n\n        <div className='profile'>\n            <div className='wrapper'>\n\n                <div className='profile__card'>\n\n                    <div className='profile__card__img'>\n                        <img src={user && user.avatar} alt=\"\" />\n                    </div>\n\n                    <div className='profile__card__info'>\n\n                        <div className='profile__card__info__name'>\n                            {user && user.name}\n                        </div>\n\n                        <div className='profile__card__info__des'>\n                            {user && user.email}\n                        </div>\n\n                    </div>\n\n                    <div className='profile__feed'>\n                        <h3> Posts </h3>\n                        <div className='profile__feedPosts'>\n\n                            {user && postData.map(post => (\n                                (post.userId == user.userId) && (\n                                    <Post\n                                        key={post._id}\n                                        post={post}\n                                    />\n                                )\n                            ))\n                            }\n\n                        </div>\n                    </div>\n                    \n                </div>\n\n            </div>\n        </div>\n    )\n}\n\nexport default Profile;","import axios from \"../Misc/axios\"\nimport { setEvents } from \"../ReduxStore/appSlice\";\n\nconst fetchEvents = async (dispatch, userId) => {\n    await axios.get('/retrieve/events', { params: { userId: userId } })\n        .then(res => dispatch(setEvents(res.data.eventsArray)))\n\n}\n\nexport default fetchEvents","import axios from \"../Misc/axios\"\nimport { setUserPosts } from \"../ReduxStore/appSlice\";\n\nconst fetchUserPosts = async (dispatch, userId) => {\n    await axios.get('/retrieve/userPosts', { params: { userId: userId } })\n        .then(res => dispatch(setUserPosts(res.data.postsArray)))\n\n}\n\nexport default fetchUserPosts","import axios from \"../Misc/axios\"\nimport { setPosts } from \"../ReduxStore/postSlice\";\n\nconst fetchPosts = async (dispatch) => {\n    await axios.get('retrieve/posts')\n        .then(res => dispatch(setPosts(res.data)))\n\n}\n\nexport default fetchPosts","import axios from \"../Misc/axios\"\nimport { appendRoomsData, setRoomsData } from \"../ReduxStore/roomSlice\";\n\nconst fetchRoomData = async (dispatch, roomId) => {\n    await axios.get('retrieve/roomData', { params: { roomId: roomId } })\n        .then(res => dispatch(appendRoomsData(res.data)))\n}\n\nconst fetchRoomsData = async (dispatch, roomsData) => {\n    await dispatch(setRoomsData([]))\n    roomsData.forEach(roomId => {\n        fetchRoomData(dispatch, roomId)\n    })\n}\n\nexport default fetchRoomsData   ","import axios from \"../Misc/axios\"\nimport { setRooms } from \"../ReduxStore/appSlice\";\nimport fetchRoomsData from './fetchRoomsData'\n\nconst fetchUserRooms = async (dispatch, userId) => {\n    await axios.get('/retrieve/events', { params: { userId: userId } })\n        .then(res => {\n            const data = res.data.roomsArray\n            dispatch(setRooms(data))\n            fetchRoomsData(dispatch, data)            \n        })\n}\n\nexport default fetchUserRooms","import fetchEvents from './fetchEvents'\nimport fetchUserPosts from './fetchUserPosts'\nimport fetchPosts from './fetchPosts'\nimport fetchUserRooms from './fetchUserRooms'\n\nconst fetchAllData = async (dispatch, userId) => {\n    fetchEvents(dispatch, userId)\n\n    fetchUserPosts(dispatch, userId)\n    fetchPosts(dispatch)\n\n    fetchUserRooms(dispatch, userId)\n}\n\nexport default fetchAllData;\n\n","import React from \"react\";\nimport \"./AboutUs.css\";\nimport { LinkedIn, GitHub, Mail } from \"@material-ui/icons\";\nimport { IconButton } from \"@material-ui/core\";\n\nconst AboutUs = () => {\n\treturn (\n\t\t<div className=\"about\">\n\t\t\t<div className=\"about__heading\">Meet the Team</div>\n\t\t\t<div className=\"card_container\">\n\t\t\t\t<div className=\"card_1 card\">\n\t\t\t\t\t<div className=\"card_img\">\n\t\t\t\t\t\t<img src=\"https://media-exp1.licdn.com/dms/image/C5603AQH55E6ahPSbjA/profile-displayphoto-shrink_800_800/0/1587156175552?e=1620864000&v=beta&t=dVJKMa7tWHa632NxS5KfGTtncWn0rXHlA5QXr1TN6hU\" />\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"card_socialmedia\">\n\t\t\t\t\t\t<form action='https://www.linkedin.com/in/puneet-jangid-26a0ba16b/' target=\"_blank\">\n\t\t\t\t\t\t\t<IconButton className=\"blue\" type='submit'>\n\t\t\t\t\t\t\t\t<LinkedIn />\n\t\t\t\t\t\t\t</IconButton>\n\t\t\t\t\t\t</form>\n\t\t\t\t\t\t<form action='https://github.com/Napster404' target=\"_blank\">\n\t\t\t\t\t\t\t<IconButton className=\"black\" type='submit'>\n\t\t\t\t\t\t\t\t<GitHub />\n\t\t\t\t\t\t\t</IconButton>\n\t\t\t\t\t\t</form>\n\t\t\t\t\t\t<form action='mailto:puneetjangid349@gmail.com' target=\"_blank\">\n\t\t\t\t\t\t\t<IconButton className=\"red\" type='submit'>\n\t\t\t\t\t\t\t\t<Mail />\n\t\t\t\t\t\t\t</IconButton>\n\t\t\t\t\t\t</form>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div className=\"name align_center\">\n\t\t\t\t\t\t<h3>Puneet Jangid</h3>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"college_info\">\n\t\t\t\t\t\t<div className=\"college_name align_center\">\n\t\t\t\t\t\t\t<h5>Delhi Technological University</h5>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className=\"degree align_center\">\n\t\t\t\t\t\t\t<h6>Computer Engineering</h6>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"card_2 card\">\n\t\t\t\t\t<div className=\"card_img\">\n\t\t\t\t\t\t<img src=\"https://media-exp1.licdn.com/dms/image/C4D03AQHeMy9dQaf6IA/profile-displayphoto-shrink_800_800/0/1566177968990?e=1620864000&v=beta&t=gbhDhSZEhrvebULNQnn4oIR8MgHwmjK9U94mubwoPVM\" />\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div className=\"card_socialmedia\">\n\t\t\t\t\t\t<form action='https://www.linkedin.com/in/rahul990/' target=\"_blank\">\n\t\t\t\t\t\t\t<IconButton className=\"blue\" type='submit'>\n\t\t\t\t\t\t\t\t<LinkedIn />\n\t\t\t\t\t\t\t</IconButton>\n\t\t\t\t\t\t</form>\n\t\t\t\t\t\t<form action='https://github.com/Rahulk990' target=\"_blank\">\n\t\t\t\t\t\t\t<IconButton className=\"black\" type='submit'>\n\t\t\t\t\t\t\t\t<GitHub />\n\t\t\t\t\t\t\t</IconButton>\n\t\t\t\t\t\t</form>\n\t\t\t\t\t\t<form action='mailto:rahulv0530@gmail.com' target=\"_blank\">\n\t\t\t\t\t\t\t<IconButton className=\"red\" type='submit'>\n\t\t\t\t\t\t\t\t<Mail />\n\t\t\t\t\t\t\t</IconButton>\n\t\t\t\t\t\t</form>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div className=\"name align_center\">\n\t\t\t\t\t\t<h3>Rahul</h3>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"college_info\">\n\t\t\t\t\t\t<div className=\"college_name align_center\">\n\t\t\t\t\t\t\t<h5>Delhi Technological University</h5>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className=\"degree align_center\">\n\t\t\t\t\t\t\t<h6>Computer Engineering</h6>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nexport default AboutUs;\n","import axios from \"../Misc/axios\"\nimport { updateRoomData } from \"../ReduxStore/roomSlice\";\n\nconst fetchRoomData = async (dispatch, userRooms, roomId) => {\n    if (userRooms.includes(roomId)) {\n        await axios.get('retrieve/roomData', { params: { roomId: roomId } })\n            .then(res => dispatch(updateRoomData(res.data)))\n    }\n}\n\nexport default fetchRoomData","import { appendRoom } from \"../ReduxStore/appSlice\";\nimport { appendRoomsData } from \"../ReduxStore/roomSlice\";\n\nconst addRoom = (dispatch, data, userId) => {\n    if (data.usersArray.includes(userId)) {\n        dispatch(appendRoom(data._id))\n        dispatch(appendRoomsData(data))\n    }\n}\n\nexport default addRoom\n","import { popRoom } from \"../ReduxStore/appSlice\";\nimport { popRoomsData } from \"../ReduxStore/roomSlice\";\n\nconst deleteRoom = (dispatch, data) => {\n    dispatch(popRoom(data))\n    dispatch(popRoomsData(data))\n}\n\nexport default deleteRoom\n","import axios from \"../Misc/axios\"\nimport { appendRoom, popRoom } from \"../ReduxStore/appSlice\";\nimport { appendRoomsData, popRoomsData } from \"../ReduxStore/roomSlice\";\n\nconst updateRooms = async (dispatch, userRooms, data, userId) => {\n    if (typeof (data.usersArray) === 'string' && data.usersArray == userId) {\n        dispatch(appendRoom(data.roomId))\n        axios.get('retrieve/roomData', { params: { roomId: data.roomId } })\n            .then(res => dispatch(appendRoomsData(res.data)))\n    } else if (typeof (data.usersArray) !== 'string' && userRooms.includes(data.roomId) && !data.usersArray.includes(userId)) {\n        dispatch(popRoom(data))\n        dispatch(popRoomsData(data))\n    }\n}\n\nexport default updateRooms","import React, { useEffect, useRef } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n\tBrowserRouter as Router,\n\tSwitch,\n\tRoute,\n\tuseHistory,\n} from \"react-router-dom\";\n\nimport Navbar from \"./Components/Navbar/Navbar\";\nimport Home from \"./Components/Home/Home\";\nimport Messenger from \"./Components/Messenger/Messenger\";\nimport Profile from \"./Components/Profile/Profile\";\nimport fetchAllData from \"./Components/API/fetchAllData\";\nimport { selectRooms, selectUser } from \"./Components/ReduxStore/appSlice\";\nimport socketIOClient from \"socket.io-client\";\nimport fetchPosts from \"./Components/API/fetchPosts\";\nimport AboutUs from \"./Components/AboutUs/AboutUs\";\nimport fetchRoomData from \"./Components/API/fetchRoomData\";\nimport addRoom from \"./Components/API/addRoom\";\nimport deleteRoom from \"./Components/API/deleteRoom\";\nimport updateRooms from \"./Components/API/updateRooms\";\n\nconst Main = () => {\n\tconst history = useHistory();\n\tconst dispatch = useDispatch();\n\tconst user = useSelector(selectUser);\n\tconst userRooms = useSelector(selectRooms);\n\n\tconst userRoomsRef = useRef(userRooms);\n\tuseEffect(() => {\n\t\tuserRoomsRef.current = userRooms;\n\t}, [userRooms]);\n\n\tuseEffect(() => {\n\t\tif (!user) {\n\t\t\thistory.push(\"/login\");\n\t\t} else {\n\t\t\t// Fetch All Data\n\t\t\tfetchAllData(dispatch, user.userId);\n\n\t\t\t// Setup Sockets\n\t\t\t// const socket = socketIOClient(\"http://localhost:8000\");\n\t\t\tconst socket = socketIOClient(\n\t\t\t\t\"https://network-backend-server.herokuapp.com/\"\n\t\t\t);\n\n\t\t\t// Setting Triggers\n\t\t\tsocket.on(\"refresh\", () => fetchPosts(dispatch));\n\t\t\tsocket.on(\"New Room Created\", (data) =>\n\t\t\t\taddRoom(dispatch, data, user.userId)\n\t\t\t);\n\t\t\tsocket.on(\"message\", (data) =>\n\t\t\t\tfetchRoomData(dispatch, userRoomsRef.current, data)\n\t\t\t);\n\t\t\tsocket.on(\"users\", (data) =>\n\t\t\t\tupdateRooms(dispatch, userRoomsRef.current, data, user.userId)\n\t\t\t);\n\t\t\tsocket.on(\"Room Deleted\", (data) => deleteRoom(dispatch, data));\n\n\t\t\treturn () => {\n\t\t\t\tsocket.disconnect();\n\t\t\t};\n\t\t}\n\t}, []);\n\n\treturn (\n\t\t<Router>\n\t\t\t{user && (\n\t\t\t\t<>\n\t\t\t\t\t<Navbar />\n\t\t\t\t\t<div className=\"app__body\">\n\t\t\t\t\t\t<Switch>\n\t\t\t\t\t\t\t<Route exact path=\"/about\">\n\t\t\t\t\t\t\t\t<AboutUs />\n\t\t\t\t\t\t\t</Route>\n\n\t\t\t\t\t\t\t<Route exact path=\"/home\">\n\t\t\t\t\t\t\t\t<Home />\n\t\t\t\t\t\t\t</Route>\n\n\t\t\t\t\t\t\t<Route path=\"/user\">\n\t\t\t\t\t\t\t\t<Profile />\n\t\t\t\t\t\t\t</Route>\n\n\t\t\t\t\t\t\t<Route path=\"/messenger\">\n\t\t\t\t\t\t\t\t<Messenger />\n\t\t\t\t\t\t\t</Route>\n\t\t\t\t\t\t</Switch>\n\t\t\t\t\t</div>\n\t\t\t\t</>\n\t\t\t)}\n\t\t</Router>\n\t);\n};\n\nexport default Main;\n","import { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport './App.css';\n\nimport Login from './Components/Login/Login'\nimport Main from './Main'\n\nfunction App() {  \n  return (\n    <div className=\"app\">\n      <Router>\n        <Switch>\n\n          <Route exact path=\"/login\">\n            <Login />\n          </Route>\n\n          <Route path=\"/\">\n            <Main />\n          </Route>\n\n        </Switch>\n      </Router>\n    </div >\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {configureStore} from '@reduxjs/toolkit';\nimport appReducer from './appSlice'\nimport roomReducer from './roomSlice'\nimport postReducer from './postSlice'\n\nexport default configureStore({\n    reducer: {\n        app: appReducer,\n        room: roomReducer,\n        post: postReducer\n    },\n});","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {Provider} from 'react-redux'\nimport store from './Components/ReduxStore/store'\n\nReactDOM.render(\n  // <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  // </React.StrictMode>\n  ,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}